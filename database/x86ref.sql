-- MySQL dump 10.13  Distrib 5.7.17, for Win64 (x86_64)
--
-- Host: localhost    Database: x86
-- ------------------------------------------------------
-- Server version	5.7.18-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `columninfo`
--

DROP TABLE IF EXISTS `columninfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `columninfo` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ColumnName` varchar(255) DEFAULT NULL,
  `Meaning` varchar(255) DEFAULT NULL,
  `Description` varchar(4000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=228 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `columninfo`
--

LOCK TABLES `columninfo` WRITE;
/*!40000 ALTER TABLE `columninfo` DISABLE KEYS */;
INSERT INTO `columninfo` VALUES (1,'pf','Prefix','Fixed extraordinary prefix, which may change the semantic of the Primary Opcode. Usually used in case of waiting x87 FPU instructions, and many SSE instructions.F390 PAUSE, 9BD9/7 FSTCW, F30F10 MOVSS'),(2,'0F','0F Prefix','Dedicated for 0F Prefix. two-byte opcodes'),(3,'po','Primary Opcode','Basic opcode. Second opcode byte in case of two- and three-byte opcodes. For coder\'s editions: +r means a register code, from 0 through 7, added to the value. 50 PUSH'),(4,'so','Secondary Opcode','Fixed appended value to the primary opcode. It is used in some special cases, x87 FPU instructions and for new three-byte instructions. D40A AAM, D50A AAD, D5F8 FLD1, three-byte escape 0F38'),(5,'flds','Opcode Fields','This column is present only in geek\'s editions. It contain present Primary Opcode binary fields. These are:'),(6,NULL,NULL,NULL),(7,NULL,NULL,'+r means a register code, from 0 through 7, added to the basic value of the Primary Opcode. 40 INC'),(8,NULL,NULL,NULL),(9,NULL,NULL,'The following fields are case-sensitive: if a letter of the code is set up in lower case, it means the appropriate bit is cleared, otherwise is set.'),(10,NULL,NULL,NULL),(11,NULL,NULL,'w means bit w (bit index 0, operand size) is present; may be combined with bits d or s. 04 ADD'),(12,NULL,NULL,'s means bit s (bit index 1, Sign-extend) is present; may be combined with bit w. 6B IMUL'),(13,NULL,NULL,'d means bit d (bit index 1, Direction) is present; may be combined with bit w. 00 ADD'),(14,NULL,NULL,'tttn means bit field tttn (4 bits, bit index 0, condition). Used only with conditional instructions. 70 JO'),(15,NULL,NULL,'sr means segment register specifier - a code of one of original four segment registers (2 bits, bit index 3). See also S2 addressing method. 06 PUSH'),(16,NULL,NULL,'sre means segment register specifier - a code of any segment registers (3 bits, bit index 0 or 3). See also S30and S33 addressing methods. 0FA0 PUSH'),(17,NULL,NULL,'mf means bit field MF (2 bits, bit index 1, memory format); used only with x87 FPU instructions coded with second floating-point instruction format. DA/0 FIADD'),(18,NULL,NULL,NULL),(19,'o','Register/ Opcode Field','1. The value of the opcode extension (values from 0 through 7). group 80'),(20,NULL,NULL,'2. r indicates that the ModR/M byte contains a register operand and an r/m operand. 00 ADD'),(21,NULL,NULL,NULL),(22,'proc','Introduced with Processor','Indicates the instruction\'s introductory processor (code in curves apply to XML reference):'),(23,NULL,NULL,NULL),(24,NULL,NULL,'5.61527777777778'),(25,NULL,NULL,'01: 80186'),(26,NULL,NULL,'02: 80286'),(27,NULL,NULL,'03: 80386'),(28,NULL,NULL,'04: 80486'),(29,NULL,NULL,'P1 (05): Pentium (1)'),(30,NULL,NULL,'PX (06): Pentium with MMX'),(31,NULL,NULL,'PP (07): Pentium Pro'),(32,NULL,NULL,'P2 (08): Pentium II'),(33,NULL,NULL,'P3 (09): Pentium III'),(34,NULL,NULL,'P4 (10): Pentium 4'),(35,NULL,NULL,'C1 (11): Core (1)'),(36,NULL,NULL,'C2 (12): Core 2'),(37,NULL,NULL,'C7 (13): Core i7'),(38,NULL,NULL,'IT (99): Itanium (only geek editions)'),(39,NULL,NULL,NULL),(40,NULL,NULL,'The opcodes that are not forward-compatible (the ones which have been abandoned) are present only in geek\'s editions.'),(41,NULL,NULL,NULL),(42,NULL,NULL,'1. If the processor marking is a range (e.g., 03-04), it means that the instruction is unsupported in latter processors.0F24 MOV'),(43,NULL,NULL,'2. + (e. g., 00+) means the instruction is supported in any of latter processors and also in 64-bit mode, if the next row doesn\'t explicitly say otherwise. 06 PUSH ES'),(44,NULL,NULL,'3. ++ (e. g., P4++) the same meaning, but only in the latter steppings of the processor (e. g., SSE3 instruction extensions). 0FA2 CPUID'),(45,NULL,NULL,NULL),(46,NULL,NULL,'If this column is empty: In case of 32-bit editions, it means 00+ (8086 and all latter processors). In case of 64-bit editions, it means P4++ (P4, latter stepping, and all latter processors), because Intel 64 Architecture is available since latter stepping of the Pentium 4 processor.'),(47,'st','Document. Status','Indicates how is the instruction documented in the Intel manuals:'),(48,NULL,NULL,NULL),(49,NULL,NULL,'1. D means fully documented. It can contain a reference to description which chapter in Intel manual it is documented in, if it may be unclear. D6'),(50,NULL,NULL,'2. M means documented only marginally. 66 (SSE2)'),(51,NULL,NULL,'3. U undocumented at all. It should contain a reference to description of the source. Note that in this reference, undocumented doesn\'t equal invalid. All mentioned undocumented instructions should work well in their scope. D6 SALC'),(52,NULL,NULL,NULL),(53,NULL,NULL,'If this column is empty, it means D (documented with no further notes).'),(54,'m','Mode of Operation','Indicates the mode, which is the instruction valid on. Virtual-8086 Mode is not taken into account.'),(55,NULL,NULL,NULL),(56,NULL,NULL,'1. R applies for real, protected and 64-bit mode. SMM is not taken into account.'),(57,NULL,NULL,'2. P applies for protected and 64-bit mode. SMM is not taken into account. group 0F00'),(58,NULL,NULL,'3. E applies for 64-bit mode. SMM is not taken into account.63 MOVSXD'),(59,NULL,NULL,'4. S applies for SMM. 0FAA RSM'),(60,NULL,NULL,NULL),(61,NULL,NULL,'If this column is empty, it means R. For 64-bit editions, E code indicates in most cases that the semantics of the opcode is specific to 64-bit mode.'),(62,'rl','Ring Level','The ring level, which is the instruction valid (3 or 0) from; f indicates that the level depends on a flag(s) and it should contain a reference to the description of that flag, if the flag is not too complex. If this column is empty, it means ring 3.INT, INS, RDTSC'),(63,'x','Lock Prefix','L indicates that the instruction is basically valid with F0 LOCKprefix. 00 ADD'),(64,NULL,'FPU Push/ FPU Pop','The following codes apply only to x87 FPU instructions (none of them can use LOCK prefix).'),(65,NULL,NULL,NULL),(66,NULL,NULL,'s incidates that the opcode performs additional push of a value to the register stack. D9 /0 FLD'),(67,NULL,NULL,'p incidates that the opcode performs additional pop of the register stack. D9 /3 FSTP'),(68,NULL,NULL,'P incidates the same like p, but pops twice. DA /5 FUCOMPP'),(69,NULL,NULL,NULL),(70,'mnemonic','Instr. Mnemonic','The instruction mnemonic itself. If there is no mnemonic, it holds additional information about the mnemonic or instruction:'),(71,NULL,NULL,NULL),(72,NULL,NULL,'If the mnemonic is set up using italic, there is no oficial mnemonic and the present one is just suggested one.D4 AMX, D5 ADX, 0FB9 UD'),(73,NULL,NULL,'no mnemonic means that there is no mnemonic for the opcode. 66'),(74,NULL,NULL,'invalid means that the opcode is invalid. This option is not used everywhere the opcode is invalid, but only in some cases. 06 (64-bit mode)'),(75,NULL,NULL,'undefined means that the behaviour of the instruction is according to official documentation undefined. D6'),(76,NULL,NULL,'nop means that the opcode is treated as integer NOPinstruction. It should contain a reference to description of the source. no mnenonic nop'),(77,NULL,NULL,'null means that the prefix has no meaning (no operation).26 (64-bit mode)'),(78,NULL,NULL,NULL),(79,NULL,NULL,'If there is a mnemonic, it can hold additional attributes of the instruction:'),(80,NULL,NULL,NULL),(81,NULL,NULL,'nop means that the instruction is treated as integer NOPinstruction (except NOP instructions themselves). It should contain a reference to description of the source.DBE0 FNENI'),(82,NULL,NULL,NULL),(83,NULL,NULL,'Only geek\'s editions:'),(84,NULL,NULL,NULL),(85,NULL,NULL,'alias means that the opcode is an alias to another opcode. The attribute should be a reference to that instruction.group 82, C0 /6 SAL'),(86,NULL,NULL,'part alias means not true alias. It should contain a reference to the description of the differences between referenced instructions. F1 INT1'),(87,NULL,NULL,NULL),(88,'op1, op2, ...','Instr. Operands','Instruction operands. Geek\'s editions use special operand codes, explained in Instruction Operand Codes chapter below. If an operand is set up using italic, it is an implicit operand, which is not explicitly used. If an operand is set up using boldface, it is modified by the instruction.'),(89,'iext','Instr. Extension Group','The instruction extension group, which was the opcode released on:'),(90,NULL,NULL,NULL),(91,NULL,NULL,'1. MMX MMX Technology'),(92,NULL,NULL,'2. SSE1 Streaming SIMD Extensions (1)'),(93,NULL,NULL,'3. SSE2 Streaming SIMD Extensions 2'),(94,NULL,NULL,'4. SSE3 Streaming SIMD Extensions 3'),(95,NULL,NULL,'5. SSSE3 Supplemental Streaming SIMD Extensions 3'),(96,NULL,NULL,'6. SSE41 Streaming SIMD Extensions 4.1'),(97,NULL,NULL,'7. SSE42 Streaming SIMD Extensions 4.2'),(98,NULL,NULL,'8. VMX Virtualization Technology Extensions'),(99,NULL,NULL,'9. SMX Safer Mode Extensions'),(100,NULL,NULL,NULL),(101,'grp1, grp2, grp3','Main Group, Sub-group, Sub -sub-group','These columns are present only in geek\'s editions. They classifies the instruction among groups. These groups don\'t match the instruction groups given by the Intel manual (I found them too loose). One instruction may fit into more groups.'),(102,NULL,NULL,NULL),(103,NULL,NULL,'1. prefix'),(104,NULL,NULL,'1. segreg segment register'),(105,NULL,NULL,'2. branch'),(106,NULL,NULL,'1. cond conditional'),(107,NULL,NULL,'3. x87fpu'),(108,NULL,NULL,'1. control (only WAIT)'),(109,NULL,NULL,'2. obsol obsolete'),(110,NULL,NULL,'1. control'),(111,NULL,NULL,'3. gen general'),(112,NULL,NULL,'1. datamov data movement'),(113,NULL,NULL,'2. stack'),(114,NULL,NULL,'3. conver type conversion'),(115,NULL,NULL,'4. arith arithmetic'),(116,NULL,NULL,'1. binary'),(117,NULL,NULL,'2. decimal'),(118,NULL,NULL,'5. logical'),(119,NULL,NULL,'6. shftrot shift&rotate'),(120,NULL,NULL,'7. bit bit manipulation'),(121,NULL,NULL,'8. branch'),(122,NULL,NULL,'1. cond conditional'),(123,NULL,NULL,'9. break interrupt'),(124,NULL,NULL,'10. string (means that the instruction can make use of the REP family prefixes)'),(125,NULL,NULL,'11. inout I/O'),(126,NULL,NULL,'12. flgctrl flag control'),(127,NULL,NULL,'13. segreg segment register manipulation'),(128,NULL,NULL,'14. control'),(129,NULL,NULL,'4. system'),(130,NULL,NULL,'1. branch'),(131,NULL,NULL,'1. trans transitional (implies sensitivity to operand-size attribute)'),(132,NULL,NULL,'5. x87fpu x87 FPU'),(133,NULL,NULL,'1. datamov data movement'),(134,NULL,NULL,'2. arith basic arithmetic'),(135,NULL,NULL,'3. compar comparison'),(136,NULL,NULL,'4. trans transcendental'),(137,NULL,NULL,'5. ldconst load constant'),(138,NULL,NULL,'6. control'),(139,NULL,NULL,'7. conv conversion'),(140,NULL,NULL,'6. sm x87 FPU and SIMD state management'),(141,NULL,NULL,NULL),(142,NULL,NULL,'MMX instruction extensions technology groups. Note that these groups are just experimental and may change in future.'),(143,NULL,NULL,NULL),(144,NULL,NULL,'1. datamov data movement'),(145,NULL,NULL,'2. arith packed arithmetic'),(146,NULL,NULL,'3. compar comparison'),(147,NULL,NULL,'4. conver conversion'),(148,NULL,NULL,'5. logical'),(149,NULL,NULL,'6. shift'),(150,NULL,NULL,'7. unpack unpacking'),(151,NULL,NULL,NULL),(152,NULL,NULL,'SSE1 instruction extensions groups. Note that these groups are just experimental and may change in future.'),(153,NULL,NULL,NULL),(154,NULL,NULL,'1. simdfp SIMD single-precision floating-point'),(155,NULL,NULL,'1. datamov data movement'),(156,NULL,NULL,'2. arith packed arithmetic'),(157,NULL,NULL,'3. compar comparison'),(158,NULL,NULL,'4. logical'),(159,NULL,NULL,'5. shunpck shuffle&unpacking'),(160,NULL,NULL,'2. conver conversion instructions'),(161,NULL,NULL,'3. simdint 64-bit SIMD integer'),(162,NULL,NULL,'4. mxcsrsm MXCSR state management'),(163,NULL,NULL,'5. cachect cacheability control'),(164,NULL,NULL,'6. fetch prefetch'),(165,NULL,NULL,'7. order instruction ordering'),(166,NULL,NULL,NULL),(167,NULL,NULL,'SSE2 instruction extensions groups. Note that these groups are just experimental and may change in future.'),(168,NULL,NULL,NULL),(169,NULL,NULL,'1. pcksclr packed and scalar double-precision floating-point'),(170,NULL,NULL,'1. datamov data movement'),(171,NULL,NULL,'2. conver conversion'),(172,NULL,NULL,'3. arith packed arithmetic'),(173,NULL,NULL,'4. compar comparison'),(174,NULL,NULL,'5. logical'),(175,NULL,NULL,'6. shunpck shuffle&unpacking'),(176,NULL,NULL,'2. pcksp packed single-precision floating-point'),(177,NULL,NULL,'3. simdint 128-bit SIMD integer'),(178,NULL,NULL,'1. datamov data movement'),(179,NULL,NULL,'2. arith packed arithmetic'),(180,NULL,NULL,'3. shunpck shuffle&unpacking'),(181,NULL,NULL,'4. shift'),(182,NULL,NULL,'5. compar comparison'),(183,NULL,NULL,'6. conver conversion'),(184,NULL,NULL,'7. logical'),(185,NULL,NULL,'4. cachect cacheability control'),(186,NULL,NULL,'5. order instruction ordering'),(187,NULL,NULL,NULL),(188,NULL,NULL,'SSE3 instruction extensions groups. Note that these groups are just experimental and may change in future.'),(189,NULL,NULL,NULL),(190,NULL,NULL,'1. simdfp SIMD single-precision floating-point (SIMD packed)'),(191,NULL,NULL,'1. datamov data movement'),(192,NULL,NULL,'2. arith packed arithmetic'),(193,NULL,NULL,'2. cachect cacheability control'),(194,NULL,NULL,'3. sync agent synchronization'),(195,NULL,NULL,NULL),(196,NULL,NULL,'SSSE3 instruction extensions group. Note that these groups are just experimental and may change in future.'),(197,NULL,NULL,NULL),(198,NULL,NULL,'1. simdint SIMD integer'),(199,NULL,NULL,NULL),(200,NULL,NULL,'SSE4.1 instruction extensions group. Note that these groups are just experimental and may change in future.'),(201,NULL,NULL,NULL),(202,NULL,NULL,'1. simdint SIMD integer'),(203,NULL,NULL,'1. datamov data movement'),(204,NULL,NULL,'2. arith packed arithmetic'),(205,NULL,NULL,'3. compar comparison'),(206,NULL,NULL,'4. conver conversion'),(207,NULL,NULL,'2. simdfp SIMD SIMD floating-point'),(208,NULL,NULL,'1. datamov data movement'),(209,NULL,NULL,'2. arith packed arithmetic'),(210,NULL,NULL,'3. conver conversion'),(211,NULL,NULL,'3. cachect cacheability control'),(212,NULL,NULL,NULL),(213,NULL,NULL,'SSE4.2 instruction extensions group. Note that these groups are just experimental and may change in future.'),(214,NULL,NULL,NULL),(215,NULL,NULL,'1. simdint SIMD integer'),(216,NULL,NULL,'1. compar comparison'),(217,NULL,NULL,'2. strtxt string and text processing'),(218,NULL,NULL,NULL),(219,NULL,NULL,'VMX and SMX instruction extensions has no groups at the moment. The grouping may be added in future.'),(220,'tested f, modif f, def f, undef f','Tested, Modified, Defined, and Undefined Flags','For rFlags register, indicates these flags using odiszapcpattern. Present flag fits in with the appropriate group.group C0'),(221,NULL,NULL,'For x87 FPU flags, indicates these flags using 1234x87 FPU flag pattern. Present flag fits in with the appropriate group. DB/7 FSTP'),(222,NULL,NULL,NULL),(223,NULL,NULL,'Note that if a flag is present in both Defined and Undefined column, the flag fits in under further conditions, which are not described by this reference.'),(224,'f values','Flags Values','For rFlags register, indicates the values of flags, which are always set or cleared, using case-sensitive odiszapcflag pattern. Lower-case flag means cleared flag, upper-case means set flag. STC'),(225,NULL,NULL,'For x87 FPU flags, indicates these flags using 1234x87 FPU flag pattern. Present flag holds its value.DBE3 FNINIT'),(226,NULL,NULL,NULL),(227,'description, notes',NULL,'Short desciption of the opcode. For now, the descriptions are very general. They will be improved in future perhaps.');
/*!40000 ALTER TABLE `columninfo` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `x86ref`
--

DROP TABLE IF EXISTS `x86ref`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `x86ref` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pf` varchar(5) NOT NULL,
  `0F` varchar(255) DEFAULT NULL,
  `po` varchar(5) NOT NULL,
  `so` varchar(255) DEFAULT NULL,
  `o` varchar(5) DEFAULT NULL,
  `proc` varchar(255) DEFAULT NULL,
  `st` varchar(5) DEFAULT NULL,
  `m` varchar(5) DEFAULT NULL,
  `rl` varchar(5) DEFAULT NULL,
  `x` varchar(5) DEFAULT NULL,
  `mnemonic` varchar(12) DEFAULT NULL,
  `op1` varchar(25) DEFAULT NULL,
  `op2` varchar(25) DEFAULT NULL,
  `op3` varchar(12) DEFAULT NULL,
  `op4` varchar(255) DEFAULT NULL,
  `iext` varchar(5) DEFAULT NULL,
  `tested f` varchar(12) DEFAULT NULL,
  `modif f` varchar(25) DEFAULT NULL,
  `def f` varchar(25) DEFAULT NULL,
  `undef f` varchar(12) DEFAULT NULL,
  `f values` varchar(12) DEFAULT NULL,
  `description, notes                                        ` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1075 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `x86ref`
--

LOCK TABLES `x86ref` WRITE;
/*!40000 ALTER TABLE `x86ref` DISABLE KEYS */;
INSERT INTO `x86ref` VALUES (1,'',NULL,'0',NULL,'r',NULL,NULL,NULL,NULL,'L','ADD','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(2,'',NULL,'1',NULL,'r',NULL,NULL,NULL,NULL,'L','ADD','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(3,'',NULL,'2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADD','r8','r/m8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(4,'',NULL,'3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADD','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(5,'',NULL,'4',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'ADD','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(6,'',NULL,'5',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'ADD','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(7,'',NULL,'6',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(8,'',NULL,'7',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(9,'',NULL,'8',NULL,'r',NULL,NULL,NULL,NULL,'L','OR','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(10,'',NULL,'9',NULL,'r',NULL,NULL,NULL,NULL,'L','OR','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(11,'',NULL,'0A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'OR','r8','r/m8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(12,'',NULL,'0B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'OR','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(13,'',NULL,'0C',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'OR','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(14,'',NULL,'0D',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'OR','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(15,'',NULL,'0E',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(16,'',NULL,'10',NULL,'r',NULL,NULL,NULL,NULL,'L','ADC','r/m8','r8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(17,'',NULL,'11',NULL,'r',NULL,NULL,NULL,NULL,'L','ADC','r/m16/32/64','r16/32/64',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(18,'',NULL,'12',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADC','r8','r/m8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(19,'',NULL,'13',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADC','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(20,'',NULL,'14',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'ADC','AL','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(21,'',NULL,'15',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'ADC','rAX','imm16/32',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(22,'',NULL,'16',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(23,'',NULL,'17',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(24,'',NULL,'18',NULL,'r',NULL,NULL,NULL,NULL,'L','SBB','r/m8','r8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(25,'',NULL,'19',NULL,'r',NULL,NULL,NULL,NULL,'L','SBB','r/m16/32/64','r16/32/64',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(26,'',NULL,'1A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SBB','r8','r/m8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(27,'',NULL,'1B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SBB','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(28,'',NULL,'1C',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SBB','AL','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(29,'',NULL,'1D',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SBB','rAX','imm16/32',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(30,'',NULL,'1E',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(31,'',NULL,'1F',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(32,'',NULL,'20',NULL,'r',NULL,NULL,NULL,NULL,'L','AND','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(33,'',NULL,'21',NULL,'r',NULL,NULL,NULL,NULL,'L','AND','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(34,'',NULL,'22',NULL,'r',NULL,NULL,NULL,NULL,NULL,'AND','r8','r/m8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(35,'',NULL,'23',NULL,'r',NULL,NULL,NULL,NULL,NULL,'AND','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(36,'',NULL,'24',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'AND','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(37,'',NULL,'25',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'AND','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(38,'26',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'null',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Null Prefix in 64-bit Mode'),(39,'',NULL,'27',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(40,'',NULL,'28',NULL,'r',NULL,NULL,NULL,NULL,'L','SUB','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(41,'',NULL,'29',NULL,'r',NULL,NULL,NULL,NULL,'L','SUB','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(42,'',NULL,'2A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SUB','r8','r/m8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(43,'',NULL,'2B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SUB','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(44,'',NULL,'2C',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SUB','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(45,'',NULL,'2D',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SUB','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(46,'2E',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'null',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Null Prefix in 64-bit Mode'),(47,'',NULL,'2F',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(48,'',NULL,'30',NULL,'r',NULL,NULL,NULL,NULL,'L','XOR','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(49,'',NULL,'31',NULL,'r',NULL,NULL,NULL,NULL,'L','XOR','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(50,'',NULL,'32',NULL,'r',NULL,NULL,NULL,NULL,NULL,'XOR','r8','r/m8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(51,'',NULL,'33',NULL,'r',NULL,NULL,NULL,NULL,NULL,'XOR','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(52,'',NULL,'34',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'XOR','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(53,'',NULL,'35',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'XOR','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(54,'36',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'null',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Null Prefix in 64-bit Mode'),(55,'',NULL,'37',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(56,'',NULL,'38',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMP','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(57,'',NULL,'39',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMP','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(58,'',NULL,'3A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMP','r8','r/m8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(59,'',NULL,'3B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMP','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(60,'',NULL,'3C',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMP','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(61,'',NULL,'3D',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMP','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(62,'3E',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'null',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Null Prefix in 64-bit Mode'),(63,'',NULL,'3F',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(64,'40',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Access to new 8-bit registers'),(65,'41',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.B',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Extension of r/m field, base field, or opcode reg field'),(66,'42',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.X',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Extension of SIB index field'),(67,'43',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.XB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.X and REX.B combination'),(68,'44',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.R',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Extension of ModR/M reg field'),(69,'45',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.RB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.R and REX.B combination'),(70,'46',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.RX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.R and REX.X combination'),(71,'47',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.RXB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.R, REX.X and REX.B combination'),(72,'48',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.W',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'64 Bit Operand Size'),(73,'49',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W and REX.B combination'),(74,'4A',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W and REX.X combination'),(75,'4B',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WXB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W, REX.X and REX.B combination'),(76,'4C',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W and REX.R combination'),(77,'4D',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WRB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W, REX.R and REX.B combination'),(78,'4E',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WRX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W, REX.R and REX.X combination'),(79,'4F',NULL,'',NULL,NULL,NULL,NULL,'E',NULL,NULL,'REX.WRXB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REX.W, REX.R, REX.X and REX.B combination'),(80,'',NULL,'50+r',NULL,NULL,NULL,NULL,'E',NULL,NULL,'PUSH','r64/16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(81,'',NULL,'58+r',NULL,NULL,NULL,NULL,'E',NULL,NULL,'POP','r64/16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pop a Value from the Stack'),(82,'',NULL,'60',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(83,'',NULL,'61',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(84,'',NULL,'62',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(85,'',NULL,'63',NULL,'r',NULL,NULL,'E',NULL,NULL,'MOVSXD','r32/64','r/m32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move with Sign-Extension'),(86,'64',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FS','FS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FS segment override prefix'),(87,'65',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'GS','GS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'GS segment override prefix'),(88,'66',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'no mnemonic',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Operand-size override prefix'),(89,'66',NULL,'',NULL,NULL,NULL,'M',NULL,NULL,NULL,'no mnemonic',NULL,NULL,NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Precision-size override prefix'),(90,'67',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'no mnemonic',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Address-size override prefix'),(91,'',NULL,'68',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PUSH','imm16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(92,'',NULL,'69',NULL,'r',NULL,NULL,NULL,NULL,NULL,'IMUL','r16/32/64','r/m16/32/64','imm16/32',NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Signed Multiply'),(93,'',NULL,'6A',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PUSH','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(94,'',NULL,'6B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'IMUL','r16/32/64','r/m16/32/64','imm8',NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Signed Multiply'),(95,'',NULL,'6C',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'INS','m8','DX',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Input from Port to String'),(96,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'INSB','m8','DX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(97,'',NULL,'6D',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'INS','m16','DX',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Input from Port to String'),(98,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'INSW','m16','DX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(99,'',NULL,'6D',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'INS','m16/32','DX',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Input from Port to String'),(100,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'INSD','m32','DX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(101,'',NULL,'6E',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUTS','DX','m8',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Output String to Port'),(102,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'OUTSB','DX','m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(103,'',NULL,'6F',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUTS','DX','m16',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Output String to Port'),(104,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'OUTSW','DX','m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(105,'',NULL,'6F',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUTS','DX','m16/32',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Output String to Port'),(106,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'OUTSD','DX','m32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(107,'',NULL,'70',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JO','rel8',NULL,NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Jump short if overflow (OF=1)'),(108,'',NULL,'71',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNO','rel8',NULL,NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Jump short if not overflow (OF=0)'),(109,'',NULL,'72',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JB','rel8',NULL,NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Jump short if below/not above or equal/carry (CF=1)'),(110,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNAE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(111,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JC','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(112,'',NULL,'73',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNB','rel8',NULL,NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Jump short if not below/above or equal/not carry (CF=0)'),(113,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JAE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(114,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNC','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(115,'',NULL,'74',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JZ','rel8',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Jump short if zero/equal (ZF=1)'),(116,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(117,'',NULL,'75',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNZ','rel8',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Jump short if not zero/not equal (ZF=0)'),(118,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(119,'',NULL,'76',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JBE','rel8',NULL,NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Jump short if below or equal/not above (CF=1 OR ZF=1)'),(120,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNA','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(121,'',NULL,'77',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNBE','rel8',NULL,NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Jump short if not below or equal/above (CF=0 AND ZF=0)'),(122,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JA','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(123,'',NULL,'78',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JS','rel8',NULL,NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Jump short if sign (SF=1)'),(124,'',NULL,'79',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNS','rel8',NULL,NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Jump short if not sign (SF=0)'),(125,'',NULL,'7A',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JP','rel8',NULL,NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Jump short if parity/parity even (PF=1)'),(126,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JPE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(127,'',NULL,'7B',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNP','rel8',NULL,NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Jump short if not parity/parity odd (PF=0)'),(128,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JPO','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(129,'',NULL,'7C',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JL','rel8',NULL,NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Jump short if less/not greater (SF!=OF)'),(130,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNGE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(131,'',NULL,'7D',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNL','rel8',NULL,NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Jump short if not less/greater or equal (SF=OF)'),(132,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JGE','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(133,'',NULL,'7E',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JLE','rel8',NULL,NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Jump short if less or equal/not greater ((ZF=1) OR (SF!=OF))'),(134,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNG','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(135,'',NULL,'7F',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNLE','rel8',NULL,NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Jump short if not less nor equal/greater ((ZF=0) AND (SF=OF))'),(136,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JG','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(137,'',NULL,'80',NULL,'0',NULL,NULL,NULL,NULL,'L','ADD','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(138,'',NULL,'80',NULL,'1',NULL,NULL,NULL,NULL,'L','OR','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(139,'',NULL,'80',NULL,'2',NULL,NULL,NULL,NULL,'L','ADC','r/m8','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(140,'',NULL,'80',NULL,'3',NULL,NULL,NULL,NULL,'L','SBB','r/m8','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(141,'',NULL,'80',NULL,'4',NULL,NULL,NULL,NULL,'L','AND','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(142,'',NULL,'80',NULL,'5',NULL,NULL,NULL,NULL,'L','SUB','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(143,'',NULL,'80',NULL,'6',NULL,NULL,NULL,NULL,'L','XOR','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(144,'',NULL,'80',NULL,'7',NULL,NULL,NULL,NULL,NULL,'CMP','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(145,'',NULL,'81',NULL,'0',NULL,NULL,NULL,NULL,'L','ADD','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(146,'',NULL,'81',NULL,'1',NULL,NULL,NULL,NULL,'L','OR','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(147,'',NULL,'81',NULL,'2',NULL,NULL,NULL,NULL,'L','ADC','r/m16/32/64','imm16/32',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(148,'',NULL,'81',NULL,'3',NULL,NULL,NULL,NULL,'L','SBB','r/m16/32/64','imm16/32',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(149,'',NULL,'81',NULL,'4',NULL,NULL,NULL,NULL,'L','AND','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(150,'',NULL,'81',NULL,'5',NULL,NULL,NULL,NULL,'L','SUB','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(151,'',NULL,'81',NULL,'6',NULL,NULL,NULL,NULL,'L','XOR','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(152,'',NULL,'81',NULL,'7',NULL,NULL,NULL,NULL,NULL,'CMP','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(153,'',NULL,'82',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(154,'',NULL,'83',NULL,'0',NULL,NULL,NULL,NULL,'L','ADD','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Add'),(155,'',NULL,'83',NULL,'1',NULL,NULL,NULL,NULL,'L','OR','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Inclusive OR'),(156,'',NULL,'83',NULL,'2',NULL,NULL,NULL,NULL,'L','ADC','r/m16/32/64','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Add with Carry'),(157,'',NULL,'83',NULL,'3',NULL,NULL,NULL,NULL,'L','SBB','r/m16/32/64','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Integer Subtraction with Borrow'),(158,'',NULL,'83',NULL,'4',NULL,NULL,NULL,NULL,'L','AND','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical AND'),(159,'',NULL,'83',NULL,'5',NULL,NULL,NULL,NULL,'L','SUB','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Subtract'),(160,'',NULL,'83',NULL,'6',NULL,NULL,NULL,NULL,'L','XOR','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Exclusive OR'),(161,'',NULL,'83',NULL,'7',NULL,NULL,NULL,NULL,NULL,'CMP','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare Two Operands'),(162,'',NULL,'84',NULL,'r',NULL,NULL,NULL,NULL,NULL,'TEST','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(163,'',NULL,'85',NULL,'r',NULL,NULL,NULL,NULL,NULL,'TEST','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(164,'',NULL,'86',NULL,'r',NULL,NULL,NULL,NULL,'L','XCHG','r8','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Exchange Register/Memory with Register'),(165,'',NULL,'87',NULL,'r',NULL,NULL,NULL,NULL,'L','XCHG','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Exchange Register/Memory with Register'),(166,'',NULL,'88',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOV','r/m8','r8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(167,'',NULL,'89',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOV','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(168,'',NULL,'8A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOV','r8','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(169,'',NULL,'8B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOV','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(170,'',NULL,'8C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOV','m16','Sreg',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(171,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','r16/32/64','Sreg',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(172,'',NULL,'8D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'LEA','r16/32/64','m',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Effective Address'),(173,'',NULL,'8E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOV','Sreg','r/m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(174,'',NULL,'8F',NULL,'0',NULL,NULL,NULL,NULL,NULL,'POP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pop a Value from the Stack'),(175,'',NULL,'8F',NULL,'0',NULL,NULL,'E',NULL,NULL,'POP','r/m64/16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pop a Value from the Stack'),(176,'',NULL,'90+r',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'XCHG','r16/32/64','rAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Exchange Register/Memory with Register'),(177,'',NULL,'90',NULL,NULL,NULL,'D1',NULL,NULL,NULL,'NOP',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'No Operation'),(178,'F3',NULL,'90',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PAUSE',NULL,NULL,NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Spin Loop Hint'),(179,'',NULL,'98',NULL,NULL,NULL,NULL,'E',NULL,NULL,'CBW','AX','AL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Convert'),(180,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CWDE','EAX','AX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(181,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CDQE','RAX','EAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(182,'',NULL,'99',NULL,NULL,NULL,NULL,'E',NULL,NULL,'CWD','DX','AX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Convert'),(183,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CDQ','EDX','EAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(184,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CQO','RDX','RAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(185,'',NULL,'9A',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(186,'',NULL,'9B',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FWAIT',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Check pending unmasked floating-point exceptions'),(187,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'WAIT',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(188,'9B',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'no mnemonic',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Wait Prefix'),(189,'',NULL,'9C',NULL,NULL,NULL,NULL,'E',NULL,NULL,'PUSHF','Flags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push rFLAGS Register onto the Stack'),(190,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PUSHFQ','RFlags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(191,'',NULL,'9D',NULL,NULL,NULL,NULL,'E',NULL,NULL,'POPF','Flags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pop Stack into rFLAGS Register'),(192,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'POPFQ','RFlags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(193,'',NULL,'9E',NULL,NULL,NULL,'D2',NULL,NULL,NULL,'SAHF','AH',NULL,NULL,NULL,NULL,NULL,'...szapc','...szapc',NULL,NULL,'Store AH into Flags'),(194,'',NULL,'9F',NULL,NULL,NULL,'D2',NULL,NULL,NULL,'LAHF','AH',NULL,NULL,NULL,NULL,'...szapc',NULL,NULL,NULL,NULL,'Load Status Flags into AH Register'),(195,'',NULL,'A0',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','AL','moffs8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(196,'',NULL,'A1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','rAX','moffs16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(197,'',NULL,'A2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','moffs8','AL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(198,'',NULL,'A3',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','moffs16/32/64','rAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(199,'',NULL,'A4',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVS','m8','m8',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Move Data from String to String'),(200,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVSB','m8','m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(201,'',NULL,'A5',NULL,NULL,NULL,NULL,'E',NULL,NULL,'MOVS','m16/32/64','m16/32/64',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Move Data from String to String'),(202,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVSW','m16','m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(203,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVSD','m32','m32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(204,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVSQ','m64','m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(205,'',NULL,'A6',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMPS','m8','m8',NULL,NULL,NULL,'.d......','o..szapc','o..szapc',NULL,NULL,'Compare String Operands'),(206,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMPSB','m8','m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(207,'',NULL,'A7',NULL,NULL,NULL,NULL,'E',NULL,NULL,'CMPS','m16/32/64','m16/32/64',NULL,NULL,NULL,'.d......','o..szapc','o..szapc',NULL,NULL,'Compare String Operands'),(208,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMPSW','m16','m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(209,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMPSD','m32','m32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(210,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMPSQ','m64','m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(211,'',NULL,'A8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'TEST','AL','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(212,'',NULL,'A9',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'TEST','rAX','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(213,'',NULL,'AA',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STOS','m8','AL',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Store String'),(214,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STOSB','m8','AL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(215,'',NULL,'AB',NULL,NULL,NULL,NULL,'E',NULL,NULL,'STOS','m16/32/64','rAX',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Store String'),(216,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STOSW','m16','AX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(217,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STOSD','m32','EAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(218,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STOSQ','m64','RAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(219,'',NULL,'AC',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LODS','AL','m8',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Load String'),(220,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LODSB','AL','m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(221,'',NULL,'AD',NULL,NULL,NULL,NULL,'E',NULL,NULL,'LODS','rAX','m16/32/64',NULL,NULL,NULL,'.d......',NULL,NULL,NULL,NULL,'Load String'),(222,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LODSW','AX','m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(223,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LODSD','EAX','m32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(224,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LODSQ','RAX','m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(225,'',NULL,'AE',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SCAS','m8','AL',NULL,NULL,NULL,'.d......','o..szapc','o..szapc',NULL,NULL,'Scan String'),(226,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SCASB','m8','AL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(227,'',NULL,'AF',NULL,NULL,NULL,NULL,'E',NULL,NULL,'SCAS','m16/32/64','rAX',NULL,NULL,NULL,'.d......','o..szapc','o..szapc',NULL,NULL,'Scan String'),(228,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SCASW','m16','AX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(229,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SCASD','m32','EAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(230,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SCASQ','m64','RAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(231,'',NULL,'B0+r',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','r8','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(232,'',NULL,'B8+r',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOV','r16/32/64','imm16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(233,'',NULL,'C0',NULL,'0',NULL,NULL,NULL,NULL,NULL,'ROL','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(234,'',NULL,'C0',NULL,'1',NULL,NULL,NULL,NULL,NULL,'ROR','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(235,'',NULL,'C0',NULL,'2',NULL,NULL,NULL,NULL,NULL,'RCL','r/m8','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(236,'',NULL,'C0',NULL,'3',NULL,NULL,NULL,NULL,NULL,'RCR','r/m8','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(237,'',NULL,'C0',NULL,'4',NULL,NULL,NULL,NULL,NULL,'SHL','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(238,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SAL','r/m8','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(239,'',NULL,'C0',NULL,'5',NULL,NULL,NULL,NULL,NULL,'SHR','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(240,'',NULL,'C0',NULL,'6',NULL,'U3',NULL,NULL,NULL,'SAL','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(241,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SHL','r/m8','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(242,'',NULL,'C0',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SAR','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a..',NULL,'Shift'),(243,'',NULL,'C1',NULL,'0',NULL,NULL,NULL,NULL,NULL,'ROL','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(244,'',NULL,'C1',NULL,'1',NULL,NULL,NULL,NULL,NULL,'ROR','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(245,'',NULL,'C1',NULL,'2',NULL,NULL,NULL,NULL,NULL,'RCL','r/m16/32/64','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(246,'',NULL,'C1',NULL,'3',NULL,NULL,NULL,NULL,NULL,'RCR','r/m16/32/64','imm8',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(247,'',NULL,'C1',NULL,'4',NULL,NULL,NULL,NULL,NULL,'SHL','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(248,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SAL','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(249,'',NULL,'C1',NULL,'5',NULL,NULL,NULL,NULL,NULL,'SHR','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(250,'',NULL,'C1',NULL,'6',NULL,'U3',NULL,NULL,NULL,'SAL','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(251,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SHL','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(252,'',NULL,'C1',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SAR','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a..',NULL,'Shift'),(253,'',NULL,'C2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RETN','imm16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Return from procedure'),(254,'',NULL,'C3',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RETN',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Return from procedure'),(255,'',NULL,'C4',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(256,'',NULL,'C5',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(257,'',NULL,'C6',NULL,'0',NULL,NULL,NULL,NULL,NULL,'MOV','r/m8','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(258,'',NULL,'C7',NULL,'0',NULL,NULL,NULL,NULL,NULL,'MOV','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move'),(259,'',NULL,'C8',NULL,NULL,NULL,NULL,'E',NULL,NULL,'ENTER','rBP','imm16','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Make Stack Frame for Procedure Parameters'),(260,'',NULL,'C9',NULL,NULL,NULL,NULL,'E',NULL,NULL,'LEAVE','rBP',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'High Level Procedure Exit'),(261,'',NULL,'CA',NULL,NULL,NULL,NULL,NULL,'f',NULL,'RETF','imm16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Return from procedure'),(262,'',NULL,'CB',NULL,NULL,NULL,NULL,NULL,'f',NULL,'RETF',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Return from procedure'),(263,'',NULL,'CC',NULL,NULL,NULL,NULL,NULL,'f',NULL,'INT','3','eFlags',NULL,NULL,NULL,NULL,'..i.....','..i.....',NULL,'..i.....','Call to Interrupt Procedure'),(264,'',NULL,'CD',NULL,NULL,NULL,NULL,NULL,'f',NULL,'INT','imm8','eFlags',NULL,NULL,NULL,NULL,'..i.....','..i.....',NULL,'..i.....','Call to Interrupt Procedure'),(265,'',NULL,'CE',NULL,NULL,NULL,NULL,NULL,'f',NULL,'INTO','eFlags',NULL,NULL,NULL,NULL,'o.......','..i.....','..i.....',NULL,'..i.....','Call to Interrupt Procedure'),(266,'',NULL,'CF',NULL,NULL,NULL,NULL,'E','f',NULL,'IRET','Flags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Interrupt Return'),(267,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'IRETD','EFlags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(268,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'IRETQ','RFlags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(269,'',NULL,'D0',NULL,'0',NULL,NULL,NULL,NULL,NULL,'ROL','r/m8','1',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Rotate'),(270,'',NULL,'D0',NULL,'1',NULL,NULL,NULL,NULL,NULL,'ROR','r/m8','1',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Rotate'),(271,'',NULL,'D0',NULL,'2',NULL,NULL,NULL,NULL,NULL,'RCL','r/m8','1',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Rotate'),(272,'',NULL,'D0',NULL,'3',NULL,NULL,NULL,NULL,NULL,'RCR','r/m8','1',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Rotate'),(273,'',NULL,'D0',NULL,'4',NULL,NULL,NULL,NULL,NULL,'SHL','r/m8','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(274,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SAL','r/m8','1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(275,'',NULL,'D0',NULL,'5',NULL,NULL,NULL,NULL,NULL,'SHR','r/m8','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(276,'',NULL,'D0',NULL,'6',NULL,'U3',NULL,NULL,NULL,'SAL','r/m8','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(277,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SHL','r/m8','1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(278,'',NULL,'D0',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SAR','r/m8','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(279,'',NULL,'D1',NULL,'0',NULL,NULL,NULL,NULL,NULL,'ROL','r/m16/32/64','1',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Rotate'),(280,'',NULL,'D1',NULL,'1',NULL,NULL,NULL,NULL,NULL,'ROR','r/m16/32/64','1',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Rotate'),(281,'',NULL,'D1',NULL,'2',NULL,NULL,NULL,NULL,NULL,'RCL','r/m16/32/64','1',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Rotate'),(282,'',NULL,'D1',NULL,'3',NULL,NULL,NULL,NULL,NULL,'RCR','r/m16/32/64','1',NULL,NULL,NULL,'.......c','o..szapc','o..szapc',NULL,NULL,'Rotate'),(283,'',NULL,'D1',NULL,'4',NULL,NULL,NULL,NULL,NULL,'SHL','r/m16/32/64','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(284,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SAL','r/m16/32/64','1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(285,'',NULL,'D1',NULL,'5',NULL,NULL,NULL,NULL,NULL,'SHR','r/m16/32/64','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(286,'',NULL,'D1',NULL,'6',NULL,'U3',NULL,NULL,NULL,'SAL','r/m16/32/64','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(287,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SHL','r/m16/32/64','1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(288,'',NULL,'D1',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SAR','r/m16/32/64','1',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(289,'',NULL,'D2',NULL,'0',NULL,NULL,NULL,NULL,NULL,'ROL','r/m8','CL',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(290,'',NULL,'D2',NULL,'1',NULL,NULL,NULL,NULL,NULL,'ROR','r/m8','CL',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(291,'',NULL,'D2',NULL,'2',NULL,NULL,NULL,NULL,NULL,'RCL','r/m8','CL',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(292,'',NULL,'D2',NULL,'3',NULL,NULL,NULL,NULL,NULL,'RCR','r/m8','CL',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(293,'',NULL,'D2',NULL,'4',NULL,NULL,NULL,NULL,NULL,'SHL','r/m8','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(294,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SAL','r/m8','CL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(295,'',NULL,'D2',NULL,'5',NULL,NULL,NULL,NULL,NULL,'SHR','r/m8','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(296,'',NULL,'D2',NULL,'6',NULL,'U3',NULL,NULL,NULL,'SAL','r/m8','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(297,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SHL','r/m8','CL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(298,'',NULL,'D2',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SAR','r/m8','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a..',NULL,'Shift'),(299,'',NULL,'D3',NULL,'0',NULL,NULL,NULL,NULL,NULL,'ROL','r/m16/32/64','CL',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(300,'',NULL,'D3',NULL,'1',NULL,NULL,NULL,NULL,NULL,'ROR','r/m16/32/64','CL',NULL,NULL,NULL,NULL,'o..szapc','o..szapc','o.......',NULL,'Rotate'),(301,'',NULL,'D3',NULL,'2',NULL,NULL,NULL,NULL,NULL,'RCL','r/m16/32/64','CL',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(302,'',NULL,'D3',NULL,'3',NULL,NULL,NULL,NULL,NULL,'RCR','r/m16/32/64','CL',NULL,NULL,NULL,'.......c','o..szapc','o..szapc','o.......',NULL,'Rotate'),(303,'',NULL,'D3',NULL,'4',NULL,NULL,NULL,NULL,NULL,'SHL','r/m16/32/64','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(304,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SAL','r/m16/32/64','CL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(305,'',NULL,'D3',NULL,'5',NULL,NULL,NULL,NULL,NULL,'SHR','r/m16/32/64','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(306,'',NULL,'D3',NULL,'6',NULL,'U3',NULL,NULL,NULL,'SAL','r/m16/32/64','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Shift'),(307,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SHL','r/m16/32/64','CL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(308,'',NULL,'D3',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SAR','r/m16/32/64','CL',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..',NULL,'Shift'),(309,'',NULL,'D4',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(310,'',NULL,'D5',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(311,'',NULL,'D6',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(312,'',NULL,'D7',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'XLAT','AL','m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Table Look-up Translation'),(313,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'XLATB','AL','m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(314,'',NULL,'D8',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FADD','ST','m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add'),(315,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FADD','ST','STi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(316,'',NULL,'D8',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FMUL','ST','m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply'),(317,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FMUL','ST','STi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(318,'',NULL,'D8',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FCOM','ST','STi/m32real',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real'),(319,'',NULL,'D8','D1','2',NULL,NULL,NULL,NULL,NULL,'FCOM','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real'),(320,'',NULL,'D8',NULL,'3',NULL,NULL,NULL,NULL,'p','FCOMP','ST','STi/m32real',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real and Pop'),(321,'',NULL,'D8','D9','3',NULL,NULL,NULL,NULL,'p','FCOMP','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real and Pop'),(322,'',NULL,'D8',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FSUB','ST','m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract'),(323,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FSUB','ST','STi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(324,'',NULL,'D8',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FSUBR','ST','m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract'),(325,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FSUBR','ST','STi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(326,'',NULL,'D8',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FDIV','ST','m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide'),(327,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FDIV','ST','STi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(328,'',NULL,'D8',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FDIVR','ST','m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide'),(329,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'FDIVR','ST','STi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(330,'',NULL,'D9',NULL,'0',NULL,NULL,NULL,NULL,'s','FLD','ST','STi/m32real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Floating Point Value'),(331,'',NULL,'D9',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FXCH','ST','STi',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Exchange Register Contents'),(332,'',NULL,'D9','C9','1',NULL,NULL,NULL,NULL,NULL,'FXCH','ST','ST1',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Exchange Register Contents'),(333,'',NULL,'D9',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FST','m32real','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value'),(334,'',NULL,'D9','D0','2',NULL,NULL,NULL,NULL,NULL,'FNOP',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'No Operation'),(335,'',NULL,'D9',NULL,'3',NULL,NULL,NULL,NULL,'p','FSTP','m32real','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(336,'',NULL,'D9',NULL,'3',NULL,'U9',NULL,NULL,'p','FSTP1','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(337,'',NULL,'D9',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FLDENV','m14/28',NULL,NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Load x87 FPU Environment'),(338,'',NULL,'D9','E0','4',NULL,NULL,NULL,NULL,NULL,'FCHS','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Change Sign'),(339,'',NULL,'D9','E1','4',NULL,NULL,NULL,NULL,NULL,'FABS','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Absolute Value'),(340,'',NULL,'D9','E4','4',NULL,NULL,NULL,NULL,NULL,'FTST','ST',NULL,NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Test'),(341,'',NULL,'D9','E5','4',NULL,NULL,NULL,NULL,NULL,'FXAM','ST',NULL,NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Examine'),(342,'',NULL,'D9',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FLDCW','m16',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Load x87 FPU Control Word'),(343,'',NULL,'D9','E8','5',NULL,NULL,NULL,NULL,'s','FLD1','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant +1.0'),(344,'',NULL,'D9','E9','5',NULL,NULL,NULL,NULL,'s','FLDL2T','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant log210'),(345,'',NULL,'D9','EA','5',NULL,NULL,NULL,NULL,'s','FLDL2E','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant log2e'),(346,'',NULL,'D9','EB','5',NULL,NULL,NULL,NULL,'s','FLDPI','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant π'),(347,'',NULL,'D9','EC','5',NULL,NULL,NULL,NULL,'s','FLDLG2','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant log102'),(348,'',NULL,'D9','ED','5',NULL,NULL,NULL,NULL,'s','FLDLN2','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant loge2'),(349,'',NULL,'D9','EE','5',NULL,NULL,NULL,NULL,'s','FLDZ','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Constant +0.0'),(350,'',NULL,'D9',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FNSTENV','m14/28',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Environment'),(351,'9B',NULL,'D9',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FSTENV','m14/28',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Environment'),(352,'',NULL,'D9','F0','6',NULL,NULL,NULL,NULL,NULL,'F2XM1','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Compute 2x-1'),(353,'',NULL,'D9','F1','6',NULL,NULL,NULL,NULL,'p','FYL2X','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Compute y × log2x and Pop'),(354,'',NULL,'D9','F2','6',NULL,NULL,NULL,NULL,'s','FPTAN','ST',NULL,NULL,NULL,NULL,NULL,'123','.12.','0..3',NULL,'Partial Tangent'),(355,'',NULL,'D9','F3','6',NULL,NULL,NULL,NULL,'p','FPATAN','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Partial Arctangent and Pop'),(356,'',NULL,'D9','F4','6',NULL,NULL,NULL,NULL,'s','FXTRACT','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Extract Exponent and Significand'),(357,'',NULL,'D9','F5','6',NULL,NULL,NULL,NULL,NULL,'FPREM1','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'IEEE Partial Remainder'),(358,'',NULL,'D9','F6','6',NULL,NULL,NULL,NULL,NULL,'FDECSTP',NULL,NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23','.0..','Decrement Stack-Top Pointer'),(359,'',NULL,'D9','F7','6',NULL,NULL,NULL,NULL,NULL,'FINCSTP',NULL,NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23','.0..','Increment Stack-Top Pointer'),(360,'',NULL,'D9',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FNSTCW','m16',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Control Word'),(361,'9B',NULL,'D9',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FSTCW','m16',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Control Word'),(362,'',NULL,'D9','F8','7',NULL,NULL,NULL,NULL,NULL,'FPREM','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Partial Remainder (for compatibility with i8087 and i287)'),(363,'',NULL,'D9','F9','7',NULL,NULL,NULL,NULL,'p','FYL2XP1','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Compute y × log2(x+1) and Pop'),(364,'',NULL,'D9','FA','7',NULL,NULL,NULL,NULL,NULL,'FSQRT','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Square Root'),(365,'',NULL,'D9','FB','7',NULL,NULL,NULL,NULL,'s','FSINCOS','ST',NULL,NULL,NULL,NULL,NULL,'123','.12.','0..3',NULL,'Sine and Cosine'),(366,'',NULL,'D9','FC','7',NULL,NULL,NULL,NULL,NULL,'FRNDINT','ST',NULL,NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Round to Integer'),(367,'',NULL,'D9','FD','7',NULL,NULL,NULL,NULL,NULL,'FSCALE','ST','ST1',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Scale'),(368,'',NULL,'D9','FE','7',NULL,NULL,NULL,NULL,NULL,'FSIN','ST',NULL,NULL,NULL,NULL,NULL,'123','.12.','0..3',NULL,'Sine'),(369,'',NULL,'D9','FF','7',NULL,NULL,NULL,NULL,NULL,'FCOS','ST',NULL,NULL,NULL,NULL,NULL,'123','.12.','0..3',NULL,'Cosine'),(370,'',NULL,'DA',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FIADD','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add'),(371,'',NULL,'DA',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FCMOVB','ST','STi',NULL,NULL,NULL,'.......c','123','.1..','0.23',NULL,'FP Conditional Move - below (CF=1)'),(372,'',NULL,'DA',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FIMUL','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply'),(373,'',NULL,'DA',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FCMOVE','ST','STi',NULL,NULL,NULL,'....z...','123','.1..','0.23',NULL,'FP Conditional Move - equal (ZF=1)'),(374,'',NULL,'DA',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FICOM','ST','m32int',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Integer'),(375,'',NULL,'DA',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FCMOVBE','ST','STi',NULL,NULL,NULL,'....z...','123','.1..','0.23',NULL,'FP Conditional Move - below or equal (CF=1 or ZF=1)'),(376,'',NULL,'DA',NULL,'3',NULL,NULL,NULL,NULL,'p','FICOMP','ST','m32int',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Integer and Pop'),(377,'',NULL,'DA',NULL,'3',NULL,NULL,NULL,NULL,NULL,'FCMOVU','ST','STi',NULL,NULL,NULL,'......p.','123','.1..','0.23',NULL,'FP Conditional Move - unordered (PF=1)'),(378,'',NULL,'DA',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FISUB','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract'),(379,'',NULL,'DA',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FISUBR','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract'),(380,'',NULL,'DA','E9','5',NULL,NULL,NULL,NULL,'P','FUCOMPP','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Unordered Compare Floating Point Values and Pop Twice'),(381,'',NULL,'DA',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FIDIV','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide'),(382,'',NULL,'DA',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FIDIVR','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide'),(383,'',NULL,'DB',NULL,'0',NULL,NULL,NULL,NULL,'s','FILD','ST','m32int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Integer'),(384,'',NULL,'DB',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FCMOVNB','ST','STi',NULL,NULL,NULL,'.......c','123','.1..','0.23',NULL,'FP Conditional Move - not below (CF=0)'),(385,'',NULL,'DB',NULL,'1',NULL,NULL,NULL,NULL,'p','FISTTP','m32int','ST',NULL,NULL,'sse3',NULL,'123','.1..','0.23','.0..','Store Integer with Truncation and Pop'),(386,'',NULL,'DB',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FCMOVNE','ST','STi',NULL,NULL,NULL,'....z...','123','.1..','0.23',NULL,'FP Conditional Move - not equal (ZF=0)'),(387,'',NULL,'DB',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FIST','m32int','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Integer'),(388,'',NULL,'DB',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FCMOVNBE','ST','STi',NULL,NULL,NULL,'....z...','123','.1..','0.23',NULL,'FP Conditional Move - below or equal (CF=0 and ZF=0)'),(389,'',NULL,'DB',NULL,'3',NULL,NULL,NULL,NULL,'p','FISTP','m32int','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Integer and Pop'),(390,'',NULL,'DB',NULL,'3',NULL,NULL,NULL,NULL,NULL,'FCMOVNU','ST','STi',NULL,NULL,NULL,'......p.','123','.1..','0.23',NULL,'FP Conditional Move - not unordered (PF=0)'),(391,'',NULL,'DB','E0','4',NULL,'D6',NULL,NULL,NULL,'FNENInop',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Treated as Integer NOP'),(392,'',NULL,'DB','E1','4',NULL,'D6',NULL,NULL,NULL,'FNDISInop',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Treated as Integer NOP'),(393,'',NULL,'DB','E2','4',NULL,NULL,NULL,NULL,NULL,'FNCLEX',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Clear Exceptions'),(394,'9B',NULL,'DB','E2','4',NULL,NULL,NULL,NULL,NULL,'FCLEX',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Clear Exceptions'),(395,'',NULL,'DB','E3','4',NULL,NULL,NULL,NULL,NULL,'FNINIT',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,NULL,'0','Initialize Floating-Point Unit'),(396,'9B',NULL,'DB','E3','4',NULL,NULL,NULL,NULL,NULL,'FINIT',NULL,NULL,NULL,NULL,NULL,NULL,'123',NULL,NULL,'0','Initialize Floating-Point Unit'),(397,'',NULL,'DB','E4','4',NULL,'D7',NULL,NULL,NULL,'FNSETPMnop',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Treated as Integer NOP'),(398,'',NULL,'DB',NULL,'5',NULL,NULL,NULL,NULL,'s','FLD','ST','m80real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Floating Point Value'),(399,'',NULL,'DB',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FUCOMI','ST','STi',NULL,NULL,NULL,NULL,'o...z.pc .1..','o...z.pc .1..',NULL,'o.......','Unordered Compare Floating Point Values and Set EFLAGS'),(400,'',NULL,'DB',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FCOMI','ST','STi',NULL,NULL,NULL,NULL,'o...z.pc .1..','o...z.pc .1..',NULL,'o.......','Compare Floating Point Values and Set EFLAGS'),(401,'',NULL,'DB',NULL,'7',NULL,NULL,NULL,NULL,'p','FSTP','m80real','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(402,'',NULL,'DC',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FADD','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add'),(403,'',NULL,'DC',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FADD','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add'),(404,'',NULL,'DC',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FMUL','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply'),(405,'',NULL,'DC',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FMUL','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply'),(406,'',NULL,'DC',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FCOM','ST','m64real',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real'),(407,'',NULL,'DC',NULL,'2',NULL,'U9',NULL,NULL,NULL,'FCOM2','ST','STi',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real'),(408,'',NULL,'DC',NULL,'3',NULL,NULL,NULL,NULL,'p','FCOMP','ST','m64real',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real and Pop'),(409,'',NULL,'DC',NULL,'3',NULL,'U9',NULL,NULL,'p','FCOMP3','ST','STi',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real and Pop'),(410,'',NULL,'DC',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FSUB','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract'),(411,'',NULL,'DC',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FSUBR','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract'),(412,'',NULL,'DC',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FSUBR','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract'),(413,'',NULL,'DC',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FSUB','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract'),(414,'',NULL,'DC',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FDIV','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide'),(415,'',NULL,'DC',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FDIVR','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide'),(416,'',NULL,'DC',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FDIVR','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide'),(417,'',NULL,'DC',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FDIV','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide and Pop'),(418,'',NULL,'DD',NULL,'0',NULL,NULL,NULL,NULL,'s','FLD','ST','m64real',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Floating Point Value'),(419,'',NULL,'DD',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FFREE','STi',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Free Floating-Point Register'),(420,'',NULL,'DD',NULL,'1',NULL,NULL,NULL,NULL,'p','FISTTP','m64int','ST',NULL,NULL,'sse3',NULL,'123','.1..','0.23','.0..','Store Integer with Truncation and Pop'),(421,'',NULL,'DD',NULL,'1',NULL,'U9',NULL,NULL,NULL,'FXCH4','ST','STi',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Exchange Register Contents'),(422,'',NULL,'DD',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FST','m64real','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value'),(423,'',NULL,'DD',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FST','ST','STi',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value'),(424,'',NULL,'DD',NULL,'3',NULL,NULL,NULL,NULL,'p','FSTP','m64real','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(425,'',NULL,'DD',NULL,'3',NULL,NULL,NULL,NULL,'p','FSTP','ST','STi',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(426,'',NULL,'DD',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FRSTOR','ST','ST1','ST2','...',NULL,NULL,'123','123',NULL,NULL,'Restore x87 FPU State'),(427,'',NULL,'DD',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FUCOM','ST','STi',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Unordered Compare Floating Point Values'),(428,'',NULL,'DD','E1','4',NULL,NULL,NULL,NULL,NULL,'FUCOM','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Unordered Compare Floating Point Values'),(429,'',NULL,'DD',NULL,'5',NULL,NULL,NULL,NULL,'p','FUCOMP','ST','STi',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Unordered Compare Floating Point Values and Pop'),(430,'',NULL,'DD','E9','5',NULL,NULL,NULL,NULL,'p','FUCOMP','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Unordered Compare Floating Point Values and Pop'),(431,'',NULL,'DD',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FNSAVE','m94/108','ST','ST1','...',NULL,NULL,'123','123',NULL,'0','Store x87 FPU State'),(432,'9B',NULL,'DD',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FSAVE','m94/108','ST','ST1','...',NULL,NULL,'123','123',NULL,'0','Store x87 FPU State'),(433,'',NULL,'DD',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FNSTSW','m16',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Status Word'),(434,'9B',NULL,'DD',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FSTSW','m16',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Status Word'),(435,'',NULL,'DE',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FIADD','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add'),(436,'',NULL,'DE',NULL,'0',NULL,NULL,NULL,NULL,'p','FADDP','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add and Pop'),(437,'',NULL,'DE','C1','0',NULL,NULL,NULL,NULL,'p','FADDP','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Add and Pop'),(438,'',NULL,'DE',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FIMUL','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply'),(439,'',NULL,'DE',NULL,'1',NULL,NULL,NULL,NULL,'p','FMULP','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply and Pop'),(440,'',NULL,'DE','C9','1',NULL,NULL,NULL,NULL,'p','FMULP','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Multiply and Pop'),(441,'',NULL,'DE',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FICOM','ST','m16int',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Integer'),(442,'',NULL,'DE',NULL,'2',NULL,'U9',NULL,NULL,'p','FCOMP5','ST','STi',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real and Pop'),(443,'',NULL,'DE',NULL,'3',NULL,NULL,NULL,NULL,'p','FICOMP','ST','m16int',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Integer and Pop'),(444,'',NULL,'DE','D9','3',NULL,NULL,NULL,NULL,'P','FCOMPP','ST','ST1',NULL,NULL,NULL,NULL,'123','123',NULL,NULL,'Compare Real and Pop Twice'),(445,'',NULL,'DE',NULL,'4',NULL,NULL,NULL,NULL,NULL,'FISUB','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract'),(446,'',NULL,'DE',NULL,'4',NULL,NULL,NULL,NULL,'p','FSUBRP','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract and Pop'),(447,'',NULL,'DE','E1','4',NULL,NULL,NULL,NULL,'p','FSUBRP','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract and Pop'),(448,'',NULL,'DE',NULL,'5',NULL,NULL,NULL,NULL,NULL,'FISUBR','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Subtract'),(449,'',NULL,'DE',NULL,'5',NULL,NULL,NULL,NULL,'p','FSUBP','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract and Pop'),(450,'',NULL,'DE','E9','5',NULL,NULL,NULL,NULL,'p','FSUBP','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Subtract and Pop'),(451,'',NULL,'DE',NULL,'6',NULL,NULL,NULL,NULL,NULL,'FIDIV','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide'),(452,'',NULL,'DE',NULL,'6',NULL,NULL,NULL,NULL,'p','FDIVRP','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide and Pop'),(453,'',NULL,'DE','F1','6',NULL,NULL,NULL,NULL,'p','FDIVRP','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide and Pop'),(454,'',NULL,'DE',NULL,'7',NULL,NULL,NULL,NULL,NULL,'FIDIVR','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Reverse Divide'),(455,'',NULL,'DE',NULL,'7',NULL,NULL,NULL,NULL,'p','FDIVP','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide and Pop'),(456,'',NULL,'DE','F9','7',NULL,NULL,NULL,NULL,'p','FDIVP','ST1','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Divide and Pop'),(457,'',NULL,'DF',NULL,'0',NULL,NULL,NULL,NULL,'s','FILD','ST','m16int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Integer'),(458,'',NULL,'DF',NULL,'0',NULL,'D8',NULL,NULL,'p','FFREEP','STi',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Free Floating-Point Register and Pop'),(459,'',NULL,'DF',NULL,'1',NULL,NULL,NULL,NULL,'p','FISTTP','m16int','ST',NULL,NULL,'sse3',NULL,'123','.1..','0.23','.0..','Store Integer with Truncation and Pop'),(460,'',NULL,'DF',NULL,'1',NULL,'U9',NULL,NULL,NULL,'FXCH7','ST','STi',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Exchange Register Contents'),(461,'',NULL,'DF',NULL,'2',NULL,NULL,NULL,NULL,NULL,'FIST','m16int','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Integer'),(462,'',NULL,'DF',NULL,'2',NULL,'U9',NULL,NULL,'p','FSTP8','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(463,'',NULL,'DF',NULL,'3',NULL,NULL,NULL,NULL,'p','FISTP','m16int','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Integer and Pop'),(464,'',NULL,'DF',NULL,'3',NULL,'U9',NULL,NULL,'p','FSTP9','STi','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Floating Point Value and Pop'),(465,'',NULL,'DF',NULL,'4',NULL,NULL,NULL,NULL,'s','FBLD','ST','m80dec',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Binary Coded Decimal'),(466,'',NULL,'DF','E0','4',NULL,NULL,NULL,NULL,NULL,'FNSTSW','AX',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Status Word'),(467,'9B',NULL,'DF','E0','4',NULL,NULL,NULL,NULL,NULL,'FSTSW','AX',NULL,NULL,NULL,NULL,NULL,'123',NULL,'123',NULL,'Store x87 FPU Status Word'),(468,'',NULL,'DF',NULL,'5',NULL,NULL,NULL,NULL,'s','FILD','ST','m64int',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Load Integer'),(469,'',NULL,'DF',NULL,'5',NULL,NULL,NULL,NULL,'p','FUCOMIP','ST','STi',NULL,NULL,NULL,NULL,'o...z.pc .1..','o...z.pc .1..',NULL,'o.......','Unordered Compare Floating Point Values and Set EFLAGS and Pop'),(470,'',NULL,'DF',NULL,'6',NULL,NULL,NULL,NULL,'p','FBSTP','m80dec','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store BCD Integer and Pop'),(471,'',NULL,'DF',NULL,'6',NULL,NULL,NULL,NULL,'p','FCOMIP','ST','STi',NULL,NULL,NULL,NULL,'o...z.pc .1..','o...z.pc .1..',NULL,'o.......','Compare Floating Point Values and Set EFLAGS and Pop'),(472,'',NULL,'DF',NULL,'7',NULL,NULL,NULL,NULL,'p','FISTP','m64int','ST',NULL,NULL,NULL,NULL,'123','.1..','0.23',NULL,'Store Integer and Pop'),(473,'',NULL,'E0',NULL,NULL,NULL,'D32','E',NULL,NULL,'LOOPNZ','rCX','rel8',NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Decrement count; Jump short if count!=0 and ZF=0'),(474,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LOOPNE','rCX','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(475,'',NULL,'E1',NULL,NULL,NULL,'D32','E',NULL,NULL,'LOOPZ','rCX','rel8',NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Decrement count; Jump short if count!=0 and ZF=1'),(476,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LOOPE','rCX','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(477,'',NULL,'E2',NULL,NULL,NULL,'D32','E',NULL,NULL,'LOOP','rCX','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Decrement count; Jump short if count!=0'),(478,'',NULL,'E3',NULL,NULL,NULL,'D32','E',NULL,NULL,'JECXZ','rel8','ECX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jump short if rCX register is 0'),(479,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JRCXZ','rel8','RCX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(480,'',NULL,'E4',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'IN','AL','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Input from Port'),(481,'',NULL,'E5',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'IN','eAX','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Input from Port'),(482,'',NULL,'E6',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUT','imm8','AL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Output to Port'),(483,'',NULL,'E7',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUT','imm8','eAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Output to Port'),(484,'',NULL,'E8',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'CALL','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Call Procedure'),(485,'',NULL,'E9',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JMP','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jump'),(486,'',NULL,'EA',NULL,NULL,NULL,NULL,'E',NULL,NULL,'invalid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalid Instruction in 64-Bit Mode'),(487,'',NULL,'EB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JMP','rel8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jump'),(488,'',NULL,'EC',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'IN','AL','DX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Input from Port'),(489,'',NULL,'ED',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'IN','eAX','DX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Input from Port'),(490,'',NULL,'EE',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUT','DX','AL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Output to Port'),(491,'',NULL,'EF',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'OUT','DX','eAX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Output to Port'),(492,'F0',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LOCK',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Assert LOCK# Signal Prefix'),(493,'',NULL,'F1',NULL,NULL,NULL,'D4',NULL,NULL,NULL,'undefined',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Undefined and Reserved; Does not Generate #UD'),(494,'',NULL,'F1',NULL,NULL,NULL,'U10',NULL,NULL,NULL,'INT1','eFlags',NULL,NULL,NULL,NULL,NULL,'..i.....','..i.....',NULL,'..i.....','Call to Interrupt Procedure'),(495,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'ICEBP','eFlags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(496,'F2',NULL,'',NULL,NULL,NULL,'D11','E',NULL,NULL,'REPNZ','rCX',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Repeat String Operation Prefix'),(497,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REPNE','rCX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(498,'F2',NULL,'',NULL,NULL,NULL,'U11','E',NULL,NULL,'REP','rCX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Repeat String Operation Prefix'),(499,'F2',NULL,'',NULL,NULL,NULL,'M',NULL,NULL,NULL,'no mnemonic',NULL,NULL,NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Scalar Double-precision Prefix'),(500,'F3',NULL,'',NULL,NULL,NULL,'D11','E',NULL,NULL,'REPZ','rCX',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Repeat String Operation Prefix'),(501,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'REPE','rCX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(502,'F3',NULL,'',NULL,NULL,NULL,'D11','E',NULL,NULL,'REP','rCX',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Repeat String Operation Prefix'),(503,'F3',NULL,'',NULL,NULL,NULL,'M',NULL,NULL,NULL,'no mnemonic',NULL,NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Scalar Single-precision Prefix'),(504,'',NULL,'F4',NULL,NULL,NULL,NULL,NULL,'0',NULL,'HLT',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Halt'),(505,'',NULL,'F5',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMC',NULL,NULL,NULL,NULL,NULL,'.......c','.......c','.......c',NULL,NULL,'Complement Carry Flag'),(506,'',NULL,'F6',NULL,'0',NULL,NULL,NULL,NULL,NULL,'TEST','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(507,'',NULL,'F6',NULL,'1',NULL,'U12',NULL,NULL,NULL,'TEST','r/m8','imm8',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(508,'',NULL,'F6',NULL,'2',NULL,NULL,NULL,NULL,'L','NOT','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'One\'s Complement Negation'),(509,'',NULL,'F6',NULL,'3',NULL,NULL,NULL,NULL,'L','NEG','r/m8',NULL,NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Two\'s Complement Negation'),(510,'',NULL,'F6',NULL,'4',NULL,NULL,NULL,NULL,NULL,'MUL','AX','AL','r/m8',NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Unsigned Multiply'),(511,'',NULL,'F6',NULL,'5',NULL,NULL,NULL,NULL,NULL,'IMUL','AX','AL','r/m8',NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Signed Multiply'),(512,'',NULL,'F6',NULL,'6',NULL,NULL,NULL,NULL,NULL,'DIV','AL','AH','AX','r/m8',NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Unsigned Divide'),(513,'',NULL,'F6',NULL,'7',NULL,NULL,NULL,NULL,NULL,'IDIV','AL','AH','AX','r/m8',NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Signed Divide'),(514,'',NULL,'F7',NULL,'0',NULL,NULL,NULL,NULL,NULL,'TEST','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(515,'',NULL,'F7',NULL,'1',NULL,'U12',NULL,NULL,NULL,'TEST','r/m16/32/64','imm16/32',NULL,NULL,NULL,NULL,'o..szapc','o..sz.pc','.....a..','o......c','Logical Compare'),(516,'',NULL,'F7',NULL,'2',NULL,NULL,NULL,NULL,'L','NOT','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'One\'s Complement Negation'),(517,'',NULL,'F7',NULL,'3',NULL,NULL,NULL,NULL,'L','NEG','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Two\'s Complement Negation'),(518,'',NULL,'F7',NULL,'4',NULL,NULL,NULL,NULL,NULL,'MUL','rDX','rAX','r/m16/32/64',NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Unsigned Multiply'),(519,'',NULL,'F7',NULL,'5',NULL,NULL,NULL,NULL,NULL,'IMUL','rDX','rAX','r/m16/32/64',NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Signed Multiply'),(520,'',NULL,'F7',NULL,'6',NULL,NULL,NULL,NULL,NULL,'DIV','rDX','rAX','r/m16/32/64',NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Unsigned Divide'),(521,'',NULL,'F7',NULL,'7',NULL,NULL,NULL,NULL,NULL,'IDIV','rDX','rAX','r/m16/32/64',NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Signed Divide'),(522,'',NULL,'F8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CLC',NULL,NULL,NULL,NULL,NULL,NULL,'.......c','.......c',NULL,'.......c','Clear Carry Flag'),(523,'',NULL,'F9',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STC',NULL,NULL,NULL,NULL,NULL,NULL,'.......c','.......c',NULL,'.......C','Set Carry Flag'),(524,'',NULL,'FA',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'CLI',NULL,NULL,NULL,NULL,NULL,NULL,'..i.....','..i.....',NULL,'..i.....','Clear Interrupt Flag'),(525,'',NULL,'FB',NULL,NULL,NULL,NULL,NULL,'f1',NULL,'STI',NULL,NULL,NULL,NULL,NULL,NULL,'..i.....','..i.....',NULL,'..I.....','Set Interrupt Flag'),(526,'',NULL,'FC',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CLD',NULL,NULL,NULL,NULL,NULL,NULL,'.d......','.d......',NULL,'.d......','Clear Direction Flag'),(527,'',NULL,'FD',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STD',NULL,NULL,NULL,NULL,NULL,NULL,'.d......','.d......',NULL,'.D......','Set Direction Flag'),(528,'',NULL,'FE',NULL,'0',NULL,NULL,NULL,NULL,'L','INC','r/m8',NULL,NULL,NULL,NULL,NULL,'o..szap.','o..szap.',NULL,NULL,'Increment by 1'),(529,'',NULL,'FE',NULL,'1',NULL,NULL,NULL,NULL,'L','DEC','r/m8',NULL,NULL,NULL,NULL,NULL,'o..szap.','o..szap.',NULL,NULL,'Decrement by 1'),(530,'',NULL,'FF',NULL,'0',NULL,NULL,NULL,NULL,'L','INC','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,'o..szap.','o..szap.',NULL,NULL,'Increment by 1'),(531,'',NULL,'FF',NULL,'1',NULL,NULL,NULL,NULL,'L','DEC','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,'o..szap.','o..szap.',NULL,NULL,'Decrement by 1'),(532,'',NULL,'FF',NULL,'2',NULL,NULL,NULL,NULL,NULL,'CALL','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Call Procedure'),(533,'',NULL,'FF',NULL,'2',NULL,'D32','E',NULL,NULL,'CALL','r/m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Call Procedure'),(534,'',NULL,'FF',NULL,'3',NULL,'D13',NULL,NULL,NULL,'CALLF','m16:16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Call Procedure'),(535,'',NULL,'FF',NULL,'4',NULL,NULL,NULL,NULL,NULL,'JMP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jump'),(536,'',NULL,'FF',NULL,'4',NULL,'D32','E',NULL,NULL,'JMP','r/m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jump'),(537,'',NULL,'FF',NULL,'5',NULL,'D13',NULL,NULL,NULL,'JMPF','m16:16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jump'),(538,'',NULL,'FF',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PUSH','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(539,'',NULL,'FF',NULL,'6',NULL,NULL,'E',NULL,NULL,'PUSH','r/m64/16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(540,'pf','0F','po','so','o','proc','st','m','rl','x','mnemonic','op1','op2','op3','op4','iext','tested f','modif f','def f','undef f','f values','description, notes                                        '),(541,'','0F','0',NULL,'0',NULL,NULL,'P',NULL,NULL,'SLDT','m16','LDTR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Store Local Descriptor Table Register'),(542,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SLDT','r16/32/64','LDTR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(543,'','0F','0',NULL,'1',NULL,NULL,'P',NULL,NULL,'STR','m16','TR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Store Task Register'),(544,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'STR','r16/32/64','TR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(545,'','0F','0',NULL,'2',NULL,NULL,'P','0',NULL,'LLDT','LDTR','r/m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Local Descriptor Table Register'),(546,'','0F','0',NULL,'3',NULL,NULL,'P','0',NULL,'LTR','TR','r/m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Task Register'),(547,'','0F','0',NULL,'4',NULL,NULL,'P',NULL,NULL,'VERR','r/m16',NULL,NULL,NULL,NULL,NULL,'....z...','....z...',NULL,NULL,'Verify a Segment for Reading'),(548,'','0F','0',NULL,'5',NULL,NULL,'P',NULL,NULL,'VERW','r/m16',NULL,NULL,NULL,NULL,NULL,'....z...','....z...',NULL,NULL,'Verify a Segment for Writing'),(549,'','0F','1',NULL,'0',NULL,NULL,NULL,NULL,NULL,'SGDT','m','GDTR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Store Global Descriptor Table Register'),(550,'','0F','1','C1','0',NULL,'D33','P','0',NULL,'VMCALL',NULL,NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Call to VM Monitor'),(551,'','0F','1','C2','0',NULL,'D33','P','0',NULL,'VMLAUNCH',NULL,NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Launch Virtual Machine'),(552,'','0F','1','C3','0',NULL,'D33','P','0',NULL,'VMRESUME',NULL,NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Resume Virtual Machine'),(553,'','0F','1','C4','0',NULL,'D33','P','0',NULL,'VMXOFF',NULL,NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Leave VMX Operation'),(554,'','0F','1',NULL,'1',NULL,NULL,NULL,NULL,NULL,'SIDT','m','IDTR',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Store Interrupt Descriptor Table Register'),(555,'','0F','1','C8','1',NULL,NULL,NULL,'0',NULL,'MONITOR','m8','ECX','EDX',NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Set Up Monitor Address'),(556,'','0F','1','C9','1',NULL,NULL,NULL,'0',NULL,'MWAIT','EAX','ECX',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Monitor Wait'),(557,'','0F','1',NULL,'2',NULL,NULL,NULL,'0',NULL,'LGDT','GDTR','m',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Global Descriptor Table Register'),(558,'','0F','1','D0','2','C2++',NULL,NULL,NULL,NULL,'XGETBV','EDX','EAX','ECX','XCR',NULL,NULL,NULL,NULL,NULL,NULL,'Get Value of Extended Control Register'),(559,'','0F','1','D1','2','C2++',NULL,NULL,'0',NULL,'XSETBV','XCR','ECX','EDX','EAX',NULL,NULL,NULL,NULL,NULL,NULL,'Set Extended Control Register'),(560,'','0F','1',NULL,'3',NULL,NULL,NULL,'0',NULL,'LIDT','IDTR','m',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Interrupt Descriptor Table Register'),(561,'','0F','1',NULL,'4',NULL,'D14',NULL,NULL,NULL,'SMSW','m16','MSW',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Store Machine Status Word'),(562,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SMSW','r16/32/64','MSW',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(563,'','0F','1',NULL,'6',NULL,NULL,NULL,'0',NULL,'LMSW','MSW','r/m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Machine Status Word'),(564,'','0F','1',NULL,'7',NULL,NULL,NULL,'0',NULL,'INVLPG','m',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalidate TLB Entry'),(565,'','0F','1','F8','7',NULL,NULL,'E','0',NULL,'SWAPGS','GS','IA32_KERNEL_…',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Swap GS Base Register'),(566,'','0F','1','F9','7','C7+',NULL,NULL,'f2',NULL,'RDTSCP','EAX','EDX','ECX','...',NULL,NULL,NULL,NULL,NULL,NULL,'Read Time-Stamp Counter and Processor ID'),(567,'','0F','2',NULL,'r',NULL,NULL,'P',NULL,NULL,'LAR','r16/32/64','m16',NULL,NULL,NULL,NULL,'....z...','....z...',NULL,NULL,'Load Access Rights Byte'),(568,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LAR','r16/32/64','r16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(569,'','0F','3',NULL,'r',NULL,NULL,'P',NULL,NULL,'LSL','r16/32/64','m16',NULL,NULL,NULL,NULL,'....z...','....z...',NULL,NULL,'Load Segment Limit'),(570,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LSL','r16/32/64','r16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(571,'','0F','5',NULL,NULL,NULL,'D15','E',NULL,NULL,'SYSCALL','RCX','R11','SS','...',NULL,NULL,NULL,NULL,NULL,NULL,'Fast System Call'),(572,'','0F','6',NULL,NULL,NULL,NULL,NULL,'0',NULL,'CLTS','CR0',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Clear Task-Switched Flag in CR0'),(573,'','0F','7',NULL,NULL,NULL,NULL,'E','0',NULL,'SYSRET','SS','EFlags','R11','...',NULL,NULL,NULL,NULL,NULL,NULL,'Return From Fast System Call'),(574,'','0F','8',NULL,NULL,NULL,NULL,NULL,'0',NULL,'INVD',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Invalidate Internal Caches'),(575,'','0F','9',NULL,NULL,NULL,NULL,NULL,'0',NULL,'WBINVD',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Write Back and Invalidate Cache'),(576,'','0F','0B',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'UD2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Undefined Instruction'),(577,'','0F','0D',NULL,NULL,NULL,'M16',NULL,NULL,NULL,'NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'No Operation'),(578,'','0F','10',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVUPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Unaligned Packed Single-FP Values'),(579,'F3','0F','10',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Scalar Single-FP Values'),(580,'66','0F','10',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVUPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Unaligned Packed Double-FP Value'),(581,'F2','0F','10',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Scalar Double-FP Value'),(582,'','0F','11',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVUPS','xmm/m128','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Unaligned Packed Single-FP Values'),(583,'F3','0F','11',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSS','xmm/m32','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Scalar Single-FP Values'),(584,'66','0F','11',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVUPD','xmm/m128','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Unaligned Packed Double-FP Values'),(585,'F2','0F','11',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSD','xmm/m64','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Scalar Double-FP Value'),(586,'','0F','12',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVHLPS','xmm','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Packed Single-FP Values High to Low'),(587,'','0F','12',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVLPS','xmm','m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Low Packed Single-FP Values'),(588,'66','0F','12',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVLPD','xmm','m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Low Packed Double-FP Value'),(589,'F2','0F','12',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVDDUP','xmm','xmm/m64',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Move One Double-FP and Duplicate'),(590,'F3','0F','12',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSLDUP','xmm','xmm/m64',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Move Packed Single-FP Low and Duplicate'),(591,'','0F','13',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVLPS','m64','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Low Packed Single-FP Values'),(592,'66','0F','13',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVLPD','m64','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Low Packed Double-FP Value'),(593,'','0F','14',NULL,'r',NULL,NULL,NULL,NULL,NULL,'UNPCKLPS','xmm','xmm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Unpack and Interleave Low Packed Single-FP Values'),(594,'66','0F','14',NULL,'r',NULL,NULL,NULL,NULL,NULL,'UNPCKLPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack and Interleave Low Packed Double-FP Values'),(595,'','0F','15',NULL,'r',NULL,NULL,NULL,NULL,NULL,'UNPCKHPS','xmm','xmm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Unpack and Interleave High Packed Single-FP Values'),(596,'66','0F','15',NULL,'r',NULL,NULL,NULL,NULL,NULL,'UNPCKHPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack and Interleave High Packed Double-FP Values'),(597,'','0F','16',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVLHPS','xmm','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Packed Single-FP Values Low to High'),(598,'','0F','16',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVHPS','xmm','m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move High Packed Single-FP Values'),(599,'66','0F','16',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVHPD','xmm','m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move High Packed Double-FP Value'),(600,'F3','0F','16',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSHDUP','xmm','xmm/m64',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Move Packed Single-FP High and Duplicate'),(601,'','0F','17',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVHPS','m64','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move High Packed Single-FP Values'),(602,'66','0F','17',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVHPD','m64','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move High Packed Double-FP Value'),(603,'','0F','18',NULL,'0',NULL,NULL,NULL,NULL,NULL,'PREFETCHNTA','m8',NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Prefetch Data Into Caches'),(604,'','0F','18',NULL,'1',NULL,NULL,NULL,NULL,NULL,'PREFETCHT0','m8',NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Prefetch Data Into Caches'),(605,'','0F','18',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PREFETCHT1','m8',NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Prefetch Data Into Caches'),(606,'','0F','18',NULL,'3',NULL,NULL,NULL,NULL,NULL,'PREFETCHT2','m8',NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Prefetch Data Into Caches'),(607,'','0F','18',NULL,'4',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(608,'','0F','18',NULL,'5',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(609,'','0F','18',NULL,'6',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(610,'','0F','18',NULL,'7',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(611,'','0F','19',NULL,NULL,NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(612,'','0F','1A',NULL,NULL,NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(613,'','0F','1B',NULL,NULL,NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(614,'','0F','1C',NULL,NULL,NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(615,'','0F','1D',NULL,NULL,NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(616,'','0F','1E',NULL,NULL,NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(617,'','0F','1F',NULL,'0',NULL,NULL,NULL,NULL,NULL,'NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'No Operation'),(618,'','0F','1F',NULL,'1',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(619,'','0F','1F',NULL,'2',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(620,'','0F','1F',NULL,'3',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(621,'','0F','1F',NULL,'4',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(622,'','0F','1F',NULL,'5',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(623,'','0F','1F',NULL,'6',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(624,'','0F','1F',NULL,'7',NULL,'M17',NULL,NULL,NULL,'HINT_NOP','r/m16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hintable NOP'),(625,'','0F','20',NULL,'r',NULL,NULL,'E','0',NULL,'MOV','r64','CRn',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Control Registers'),(626,'','0F','20',NULL,'r',NULL,'U18','E','0',NULL,'MOV','r64','CRn',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Control Registers'),(627,'','0F','21',NULL,'r',NULL,NULL,'E','0',NULL,'MOV','r64','DRn',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Debug Registers'),(628,'','0F','21',NULL,'r',NULL,'U18','E','0',NULL,'MOV','r64','DRn',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Debug Registers'),(629,'','0F','22',NULL,'r',NULL,NULL,'E','0',NULL,'MOV','CRn','r64',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Control Registers'),(630,'','0F','22',NULL,'r',NULL,'U18','E','0',NULL,'MOV','CRn','r64',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Control Registers'),(631,'','0F','23',NULL,'r',NULL,NULL,'E','0',NULL,'MOV','DRn','r64',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Debug Registers'),(632,'','0F','23',NULL,'r',NULL,'U18','E','0',NULL,'MOV','DRn','r64',NULL,NULL,NULL,NULL,'o..szapc',NULL,'o..szapc',NULL,'Move to/from Debug Registers'),(633,'','0F','28',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVAPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Aligned Packed Single-FP Values'),(634,'66','0F','28',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVAPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Aligned Packed Double-FP Values'),(635,'','0F','29',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVAPS','xmm/m128','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Aligned Packed Single-FP Values'),(636,'66','0F','29',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVAPD','xmm/m128','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Aligned Packed Double-FP Values'),(637,'','0F','2A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPI2PS','xmm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Convert Packed DW Integers to Single-FP Values'),(638,'F3','0F','2A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTSI2SS','xmm','r/m32/64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Convert DW Integer to Scalar Single-FP Value'),(639,'66','0F','2A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPI2PD','xmm','mm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed DW Integers to Double-FP Values'),(640,'F2','0F','2A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTSI2SD','xmm','r/m32/64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert DW Integer to Scalar Double-FP Value'),(641,'','0F','2B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVNTPS','m128','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Store Packed Single-FP Values Using Non-Temporal Hint'),(642,'66','0F','2B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVNTPD','m128','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Store Packed Double-FP Values Using Non-Temporal Hint'),(643,'','0F','2C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTTPS2PI','mm','xmm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Convert with Trunc. Packed Single-FP Values to DW Integers'),(644,'F3','0F','2C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTTSS2SI','r32/64','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Convert with Trunc. Scalar Single-FP Value to DW Integer'),(645,'66','0F','2C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTTPD2PI','mm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert with Trunc. Packed Double-FP Values to DW Integers'),(646,'F2','0F','2C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTTSD2SI','r32/64','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Conv. with Trunc. Scalar Double-FP Value to Signed DW Int'),(647,'','0F','2D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPS2PI','mm','xmm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Convert Packed Single-FP Values to DW Integers'),(648,'F3','0F','2D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTSS2SI','r32/64','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Convert Scalar Single-FP Value to DW Integer'),(649,'66','0F','2D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPD2PI','mm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed Double-FP Values to DW Integers'),(650,'F2','0F','2D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTSD2SI','r32/64','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Scalar Double-FP Value to DW Integer'),(651,'','0F','2E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'UCOMISS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,'....z.pc','....z.pc',NULL,NULL,'Unordered Compare Scalar Single-FP Values and Set EFLAGS'),(652,'66','0F','2E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'UCOMISD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,'....z.pc','....z.pc',NULL,NULL,'Unordered Compare Scalar Double-FP Values and Set EFLAGS'),(653,'','0F','2F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'COMISS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,'....z.pc','....z.pc',NULL,NULL,'Compare Scalar Ordered Single-FP Values and Set EFLAGS'),(654,'66','0F','2F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'COMISD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,'....z.pc','....z.pc',NULL,NULL,'Compare Scalar Ordered Double-FP Values and Set EFLAGS'),(655,'','0F','30',NULL,NULL,NULL,NULL,NULL,'0',NULL,'WRMSR','MSR','rCX','rAX','rDX',NULL,NULL,NULL,NULL,NULL,NULL,'Write to Model Specific Register'),(656,'','0F','31',NULL,NULL,NULL,NULL,NULL,'f2',NULL,'RDTSC','EAX','EDX','IA32_TIME_S…',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Read Time-Stamp Counter'),(657,'','0F','32',NULL,NULL,NULL,NULL,NULL,'0',NULL,'RDMSR','rAX','rDX','rCX','MSR',NULL,NULL,NULL,NULL,NULL,NULL,'Read from Model Specific Register'),(658,'','0F','33',NULL,NULL,NULL,NULL,NULL,'f3',NULL,'RDPMC','EAX','EDX','PMC',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Read Performance-Monitoring Counters'),(659,'','0F','34',NULL,NULL,NULL,'D19','E',NULL,NULL,'SYSENTER','SS','RSP','IA32_SYSENT…','...',NULL,NULL,'..i.....','..i.....',NULL,'..i.....','Fast System Call'),(660,'','0F','35',NULL,NULL,NULL,'D20','P','0',NULL,'SYSEXIT','SS','eSP','IA32_SYSENT…','...',NULL,NULL,NULL,NULL,NULL,NULL,'Fast Return from Fast System Call'),(661,'','0F','37',NULL,NULL,'C2++','D21',NULL,NULL,NULL,'GETSEC','EAX',NULL,NULL,NULL,'smx',NULL,NULL,NULL,NULL,NULL,'GETSEC Leaf Functions'),(662,'66','0F','38','80','r','C2++','D33','E','0',NULL,'INVEPT','r64','m128',NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Invalidate Translations Derived from EPT'),(663,'66','0F','38','81','r','C2++','D33','E','0',NULL,'INVVPID','r64','m128',NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Invalidate Translations Based on VPID'),(664,'','0F','38','F0','r','C2++',NULL,NULL,NULL,NULL,'MOVBE','r16/32/64','m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move Data After Swapping Bytes'),(665,'F2','0F','38','F0','r','C2++','D34',NULL,NULL,NULL,'CRC32','r32/64','r/m8',NULL,NULL,'sse42',NULL,NULL,NULL,NULL,NULL,'Accumulate CRC32 Value'),(666,'','0F','38','F1','r','C2++',NULL,NULL,NULL,NULL,'MOVBE','m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move Data After Swapping Bytes'),(667,'F2','0F','38','F1','r','C2++','D34',NULL,NULL,NULL,'CRC32','r32/64','r/m16/32/64',NULL,NULL,'sse42',NULL,NULL,NULL,NULL,NULL,'Accumulate CRC32 Value'),(668,'66','0F','3A','8','r','C2++','D34',NULL,NULL,NULL,'ROUNDPS','xmm','xmm/m128','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Round Packed Single-FP Values'),(669,'66','0F','3A','9','r','C2++','D34',NULL,NULL,NULL,'ROUNDPD','xmm','xmm/m128','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Round Packed Double-FP Values'),(670,'66','0F','3A','0A','r','C2++','D34',NULL,NULL,NULL,'ROUNDSS','xmm','xmm/m32','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Round Scalar Single-FP Values'),(671,'66','0F','3A','0B','r','C2++','D34',NULL,NULL,NULL,'ROUNDSD','xmm','xmm/m64','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Round Scalar Double-FP Values'),(672,'66','0F','3A','0C','r','C2++','D34',NULL,NULL,NULL,'BLENDPS','xmm','xmm/m128','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Blend Packed Single-FP Values'),(673,'66','0F','3A','0D','r','C2++','D34',NULL,NULL,NULL,'BLENDPD','xmm','xmm/m128','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Blend Packed Double-FP Values'),(674,'66','0F','3A','0E','r','C2++','D34',NULL,NULL,NULL,'PBLENDW','xmm','xmm/m128','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Blend Packed Words'),(675,'','0F','3A','0F','r','C2+',NULL,NULL,NULL,NULL,'PALIGNR','mm','mm/m64',NULL,NULL,'ssse3',NULL,NULL,NULL,NULL,NULL,'Packed Align Right'),(676,'66','0F','3A','0F','r','C2+',NULL,NULL,NULL,NULL,'PALIGNR','xmm','xmm/m128',NULL,NULL,'ssse3',NULL,NULL,NULL,NULL,NULL,'Packed Align Right'),(677,'66','0F','3A','14','r','C2++','D34',NULL,NULL,NULL,'PEXTRB','m8','xmm','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Extract Byte'),(678,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PEXTRB','r32/64','xmm','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(679,'66','0F','3A','15','r','C2++','D34',NULL,NULL,NULL,'PEXTRW','m16','xmm','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Extract Word'),(680,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PEXTRW','r32/64','xmm','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(681,'66','0F','3A','16','r','C2++','D34',NULL,NULL,NULL,'PEXTRD','r/m32','xmm','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Extract Dword/Qword'),(682,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PEXTRQ','r/m64','xmm','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(683,'66','0F','3A','17','r','C2++','D34',NULL,NULL,NULL,'EXTRACTPS','r/m32','xmm','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Extract Packed Single-FP Value'),(684,'66','0F','3A','20','r','C2++','D34',NULL,NULL,NULL,'PINSRB','xmm','m8','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Insert Byte'),(685,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PINSRB','xmm','r32/64','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(686,'66','0F','3A','21','r','C2++','D34',NULL,NULL,NULL,'INSERTPS','xmm','m32','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Insert Packed Single-FP Value'),(687,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'INSERTPS','xmm','xmm','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(688,'66','0F','3A','22','r','C2++','D34',NULL,NULL,NULL,'PINSRD','xmm','r/m32','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Insert Dword/Qword'),(689,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PINSRQ','xmm','r/m64','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(690,'66','0F','3A','40','r','C2++','D34',NULL,NULL,NULL,'DPPS','xmm','xmm/m128',NULL,NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Dot Product of Packed Single-FP Values'),(691,'66','0F','3A','41','r','C2++','D34',NULL,NULL,NULL,'DPPD','xmm','xmm/m128',NULL,NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Dot Product of Packed Double-FP Values'),(692,'66','0F','3A','42','r','C2++','D34',NULL,NULL,NULL,'MPSADBW','xmm','xmm/m128','imm8',NULL,'sse41',NULL,NULL,NULL,NULL,NULL,'Compute Multiple Packed Sums of Absolute Difference'),(693,'66','0F','3A','60','r','C2++','D34',NULL,NULL,NULL,'PCMPESTRM','XMM0','xmm','xmm/m128','...','sse42',NULL,'o..szapc','o..szapc',NULL,'.....ap.','Packed Compare Explicit Length Strings, Return Mask'),(694,'66','0F','3A','61','r','C2++','D34',NULL,NULL,NULL,'PCMPESTRI','rCX','xmm','xmm/m128','...','sse42',NULL,'o..szapc','o..szapc',NULL,'.....ap.','Packed Compare Explicit Length Strings, Return Index'),(695,'66','0F','3A','62','r','C2++','D34',NULL,NULL,NULL,'PCMPISTRM','XMM0','xmm','xmm/m128','imm8','sse42',NULL,'o..szapc','o..szapc',NULL,'.....ap.','Packed Compare Implicit Length Strings, Return Mask'),(696,'66','0F','3A','63','r','C2++','D34',NULL,NULL,NULL,'PCMPISTRI','rCX','xmm','xmm/m128','imm8','sse42',NULL,'o..szapc','o..szapc',NULL,'.....ap.','Packed Compare Implicit Length Strings, Return Index'),(697,'','0F','40',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVO','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Conditional Move - overflow (OF=1)'),(698,'','0F','41',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNO','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Conditional Move - not overflow (OF=0)'),(699,'','0F','42',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVB','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Conditional Move - below/not above or equal/carry (CF=1)'),(700,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVNAE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(701,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVC','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(702,'','0F','43',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNB','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Conditional Move - not below/above or equal/not carry (CF=0)'),(703,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVAE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(704,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVNC','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(705,'','0F','44',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVZ','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Conditional Move - zero/equal (ZF=1)'),(706,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(707,'','0F','45',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNZ','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Conditional Move - not zero/not equal (ZF=0)'),(708,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVNE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(709,'','0F','46',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVBE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Conditional Move - below or equal/not above (CF=1 OR ZF=1)'),(710,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVNA','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(711,'','0F','47',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNBE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Conditional Move - not below or equal/above (CF=0 AND ZF=0)'),(712,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVA','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(713,'','0F','48',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVS','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Conditional Move - sign (SF=1)'),(714,'','0F','49',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNS','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Conditional Move - not sign (SF=0)'),(715,'','0F','4A',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVP','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Conditional Move - parity/parity even (PF=1)'),(716,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVPE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(717,'','0F','4B',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNP','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Conditional Move - not parity/parity odd (PF=0)'),(718,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVPO','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(719,'','0F','4C',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVL','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Conditional Move - less/not greater (SF!=OF)'),(720,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVNGE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(721,'','0F','4D',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNL','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Conditional Move - not less/greater or equal (SF=OF)'),(722,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVGE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(723,'','0F','4E',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVLE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Conditional Move - less or equal/not greater ((ZF=1) OR (SF!=OF))'),(724,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVNG','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(725,'','0F','4F',NULL,'r',NULL,'D23',NULL,NULL,NULL,'CMOVNLE','r16/32/64','r/m16/32/64',NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Conditional Move - not less nor equal/greater ((ZF=0) AND (SF=OF))'),(726,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMOVG','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(727,'','0F','50',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVMSKPS','r32/64','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Extract Packed Single-FP Sign Mask'),(728,'66','0F','50',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVMSKPD','r32/64','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Extract Packed Double-FP Sign Mask'),(729,'','0F','51',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SQRTPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Square Roots of Packed Single-FP Values'),(730,'F3','0F','51',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SQRTSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Square Root of Scalar Single-FP Value'),(731,'66','0F','51',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SQRTPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compute Square Roots of Packed Double-FP Values'),(732,'F2','0F','51',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SQRTSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compute Square Root of Scalar Double-FP Value'),(733,'','0F','52',NULL,'r',NULL,NULL,NULL,NULL,NULL,'RSQRTPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Recipr. of Square Roots of Packed Single-FP Values'),(734,'F3','0F','52',NULL,'r',NULL,NULL,NULL,NULL,NULL,'RSQRTSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Recipr. of Square Root of Scalar Single-FP Value'),(735,'','0F','53',NULL,'r',NULL,NULL,NULL,NULL,NULL,'RCPPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Reciprocals of Packed Single-FP Values'),(736,'F3','0F','53',NULL,'r',NULL,NULL,NULL,NULL,NULL,'RCPSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Reciprocal of Scalar Single-FP Values'),(737,'','0F','54',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ANDPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical AND of Packed Single-FP Values'),(738,'66','0F','54',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ANDPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical AND of Packed Double-FP Values'),(739,'','0F','55',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ANDNPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical AND NOT of Packed Single-FP Values'),(740,'66','0F','55',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ANDNPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical AND NOT of Packed Double-FP Values'),(741,'','0F','56',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ORPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical OR of Single-FP Values'),(742,'66','0F','56',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ORPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical OR of Double-FP Values'),(743,'','0F','57',NULL,'r',NULL,NULL,NULL,NULL,NULL,'XORPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical XOR for Single-FP Values'),(744,'66','0F','57',NULL,'r',NULL,NULL,NULL,NULL,NULL,'XORPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical XOR for Double-FP Values'),(745,'','0F','58',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADDPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Add Packed Single-FP Values'),(746,'F3','0F','58',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADDSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Add Scalar Single-FP Values'),(747,'66','0F','58',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADDPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Double-FP Values'),(748,'F2','0F','58',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADDSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Scalar Double-FP Values'),(749,'','0F','59',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MULPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Single-FP Values'),(750,'F3','0F','59',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MULSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Multiply Scalar Single-FP Value'),(751,'66','0F','59',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MULPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Double-FP Values'),(752,'F2','0F','59',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MULSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply Scalar Double-FP Values'),(753,'','0F','5A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPS2PD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed Single-FP Values to Double-FP Values'),(754,'66','0F','5A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPD2PS','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed Double-FP Values to Single-FP Values'),(755,'F3','0F','5A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTSS2SD','xmm','xmm/m32',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Scalar Single-FP Value to Scalar Double-FP Value'),(756,'F2','0F','5A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTSD2SS','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Scalar Double-FP Value to Scalar Single-FP Value'),(757,'','0F','5B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTDQ2PS','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed DW Integers to Single-FP Values'),(758,'66','0F','5B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPS2DQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed Single-FP Values to DW Integers'),(759,'F3','0F','5B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTTPS2DQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert with Trunc. Packed Single-FP Values to DW Integers'),(760,'','0F','5C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SUBPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Single-FP Values'),(761,'F3','0F','5C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SUBSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Subtract Scalar Single-FP Values'),(762,'66','0F','5C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SUBPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Double-FP Values'),(763,'F2','0F','5C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SUBSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Scalar Double-FP Values'),(764,'','0F','5D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MINPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Return Minimum Packed Single-FP Values'),(765,'F3','0F','5D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MINSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Return Minimum Scalar Single-FP Value'),(766,'66','0F','5D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MINPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Return Minimum Packed Double-FP Values'),(767,'F2','0F','5D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MINSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Return Minimum Scalar Double-FP Value'),(768,'','0F','5E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'DIVPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Divide Packed Single-FP Values'),(769,'F3','0F','5E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'DIVSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Divide Scalar Single-FP Values'),(770,'66','0F','5E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'DIVPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Divide Packed Double-FP Values'),(771,'F2','0F','5E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'DIVSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Divide Scalar Double-FP Values'),(772,'','0F','5F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MAXPS','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Return Maximum Packed Single-FP Values'),(773,'F3','0F','5F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MAXSS','xmm','xmm/m32',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Return Maximum Scalar Single-FP Value'),(774,'66','0F','5F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MAXPD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Return Maximum Packed Double-FP Values'),(775,'F2','0F','5F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MAXSD','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Return Maximum Scalar Double-FP Value'),(776,'','0F','60',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLBW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(777,'66','0F','60',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLBW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(778,'','0F','61',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLWD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(779,'66','0F','61',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLWD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(780,'','0F','62',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLDQ','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(781,'66','0F','62',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLDQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(782,'','0F','63',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PACKSSWB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Pack with Signed Saturation'),(783,'66','0F','63',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PACKSSWB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Pack with Signed Saturation'),(784,'','0F','64',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPGTB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Compare Packed Signed Integers for Greater Than'),(785,'66','0F','64',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPGTB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Signed Integers for Greater Than'),(786,'','0F','65',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPGTW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Compare Packed Signed Integers for Greater Than'),(787,'66','0F','65',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPGTW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Signed Integers for Greater Than'),(788,'','0F','66',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPGTD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Compare Packed Signed Integers for Greater Than'),(789,'66','0F','66',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPGTD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Signed Integers for Greater Than'),(790,'','0F','67',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PACKUSWB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Pack with Unsigned Saturation'),(791,'66','0F','67',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PACKUSWB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Pack with Unsigned Saturation'),(792,'','0F','68',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHBW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(793,'66','0F','68',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHBW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(794,'','0F','69',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHWD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(795,'66','0F','69',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHWD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(796,'','0F','6A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHDQ','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(797,'66','0F','6A',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHDQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(798,'','0F','6B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PACKSSDW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Pack with Signed Saturation'),(799,'66','0F','6B',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PACKSSDW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Pack with Signed Saturation'),(800,'66','0F','6C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKLQDQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack Low Data'),(801,'66','0F','6D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PUNPCKHQDQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Unpack High Data'),(802,'','0F','6E',NULL,'r',NULL,'D22','E',NULL,NULL,'MOVD','mm','r/m32',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Move Doubleword/Quadword'),(803,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVQ','mm','r/m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(804,'66','0F','6E',NULL,'r',NULL,'D22','E',NULL,NULL,'MOVD','xmm','r/m32',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Doubleword/Quadword'),(805,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVQ','xmm','r/m64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(806,'','0F','6F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVQ','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Move Quadword'),(807,'66','0F','6F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVDQA','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Aligned Double Quadword'),(808,'F3','0F','6F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVDQU','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Unaligned Double Quadword'),(809,'','0F','70',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSHUFW','mm','mm/m64','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Shuffle Packed Words'),(810,'F2','0F','70',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSHUFLW','xmm','xmm/m128','imm8',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shuffle Packed Low Words'),(811,'F3','0F','70',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSHUFHW','xmm','xmm/m128','imm8',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shuffle Packed High Words'),(812,'66','0F','70',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSHUFD','xmm','xmm/m128','imm8',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shuffle Packed Doublewords'),(813,'','0F','71',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PSRLW','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(814,'66','0F','71',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PSRLW','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(815,'','0F','71',NULL,'4',NULL,NULL,NULL,NULL,NULL,'PSRAW','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(816,'66','0F','71',NULL,'4',NULL,NULL,NULL,NULL,NULL,'PSRAW','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(817,'','0F','71',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PSLLW','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(818,'66','0F','71',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PSLLW','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(819,'','0F','72',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PSRLD','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Double Quadword Right Logical'),(820,'66','0F','72',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PSRLD','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Double Quadword Right Logical'),(821,'','0F','72',NULL,'4',NULL,NULL,NULL,NULL,NULL,'PSRAD','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(822,'66','0F','72',NULL,'4',NULL,NULL,NULL,NULL,NULL,'PSRAD','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(823,'','0F','72',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PSLLD','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(824,'66','0F','72',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PSLLD','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(825,'','0F','73',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PSRLQ','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(826,'66','0F','73',NULL,'2',NULL,NULL,NULL,NULL,NULL,'PSRLQ','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(827,'66','0F','73',NULL,'3',NULL,NULL,NULL,NULL,NULL,'PSRLDQ','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Double Quadword Right Logical'),(828,'','0F','73',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PSLLQ','mm','imm8',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(829,'66','0F','73',NULL,'6',NULL,NULL,NULL,NULL,NULL,'PSLLQ','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(830,'66','0F','73',NULL,'7',NULL,NULL,NULL,NULL,NULL,'PSLLDQ','xmm','imm8',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Double Quadword Left Logical'),(831,'','0F','74',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPEQB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Compare Packed Data for Equal'),(832,'66','0F','74',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPEQB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Data for Equal'),(833,'','0F','75',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPEQW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Compare Packed Data for Equal'),(834,'66','0F','75',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPEQW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Data for Equal'),(835,'','0F','76',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPEQD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Compare Packed Data for Equal'),(836,'66','0F','76',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PCMPEQD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Data for Equal'),(837,'','0F','77',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'EMMS',NULL,NULL,NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Empty MMX Technology State'),(838,'','0F','78',NULL,'r',NULL,'D33','E','0',NULL,'VMREAD','r/m64','r64',NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Read Field from Virtual-Machine Control Structure'),(839,'','0F','79',NULL,'r',NULL,'D33','E','0',NULL,'VMWRITE','r64','r/m64',NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Write Field to Virtual-Machine Control Structure'),(840,'66','0F','7C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'HADDPD','xmm','xmm/m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Packed Double-FP Horizontal Add'),(841,'F2','0F','7C',NULL,'r',NULL,NULL,NULL,NULL,NULL,'HADDPS','xmm','xmm/m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Packed Single-FP Horizontal Add'),(842,'66','0F','7D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'HSUBPD','xmm','xmm/m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Packed Double-FP Horizontal Subtract'),(843,'F2','0F','7D',NULL,'r',NULL,NULL,NULL,NULL,NULL,'HSUBPS','xmm','xmm/m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Packed Single-FP Horizontal Subtract'),(844,'','0F','7E',NULL,'r',NULL,'D22','E',NULL,NULL,'MOVD','r/m32','mm',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Move Doubleword/Quadword'),(845,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVQ','r/m64','mm',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(846,'66','0F','7E',NULL,'r',NULL,'D22','E',NULL,NULL,'MOVD','r/m32','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Doubleword/Quadword'),(847,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MOVQ','r/m64','xmm',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(848,'F3','0F','7E',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVQ','xmm','xmm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Quadword'),(849,'','0F','7F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVQ','mm/m64','mm',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Move Quadword'),(850,'66','0F','7F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVDQA','xmm/m128','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Aligned Double Quadword'),(851,'F3','0F','7F',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVDQU','xmm/m128','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Unaligned Double Quadword'),(852,'','0F','80',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JO','rel16/32',NULL,NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Jump near if overflow (OF=1)'),(853,'','0F','81',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNO','rel16/32',NULL,NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Jump near if not overflow (OF=0)'),(854,'','0F','82',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JB','rel16/32',NULL,NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Jump near if below/not above or equal/carry (CF=1)'),(855,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNAE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(856,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JC','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(857,'','0F','83',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNB','rel16/32',NULL,NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Jump near if not below/above or equal/not carry (CF=0)'),(858,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JAE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(859,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNC','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(860,'','0F','84',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JZ','rel16/32',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Jump near if zero/equal (ZF=1)'),(861,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(862,'','0F','85',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNZ','rel16/32',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Jump near if not zero/not equal (ZF=0)'),(863,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(864,'','0F','86',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JBE','rel16/32',NULL,NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Jump near if below or equal/not above (CF=1 OR ZF=1)'),(865,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNA','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(866,'','0F','87',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNBE','rel16/32',NULL,NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Jump near if not below or equal/above (CF=0 AND ZF=0)'),(867,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JA','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(868,'','0F','88',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JS','rel16/32',NULL,NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Jump near if sign (SF=1)'),(869,'','0F','89',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNS','rel16/32',NULL,NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Jump near if not sign (SF=0)'),(870,'','0F','8A',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JP','rel16/32',NULL,NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Jump near if parity/parity even (PF=1)'),(871,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JPE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(872,'','0F','8B',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNP','rel16/32',NULL,NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Jump near if not parity/parity odd (PF=0)'),(873,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JPO','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(874,'','0F','8C',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JL','rel16/32',NULL,NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Jump near if less/not greater (SF!=OF)'),(875,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNGE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(876,'','0F','8D',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNL','rel16/32',NULL,NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Jump near if not less/greater or equal (SF=OF)'),(877,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JGE','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(878,'','0F','8E',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JLE','rel16/32',NULL,NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Jump near if less or equal/not greater ((ZF=1) OR (SF!=OF))'),(879,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JNG','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(880,'','0F','8F',NULL,NULL,NULL,'D32',NULL,NULL,NULL,'JNLE','rel16/32',NULL,NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Jump near if not less nor equal/greater ((ZF=0) AND (SF=OF))'),(881,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'JG','rel16/32',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(882,'','0F','90',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETO','r/m8',NULL,NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Set Byte on Condition - overflow (OF=1)'),(883,'','0F','91',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNO','r/m8',NULL,NULL,NULL,NULL,'o.......',NULL,NULL,NULL,NULL,'Set Byte on Condition - not overflow (OF=0)'),(884,'','0F','92',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETB','r/m8',NULL,NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Set Byte on Condition - below/not above or equal/carry (CF=1)'),(885,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETNAE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(886,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETC','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(887,'','0F','93',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNB','r/m8',NULL,NULL,NULL,NULL,'.......c',NULL,NULL,NULL,NULL,'Set Byte on Condition - not below/above or equal/not carry (CF=0)'),(888,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETAE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(889,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETNC','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(890,'','0F','94',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETZ','r/m8',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Set Byte on Condition - zero/equal (ZF=1)'),(891,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(892,'','0F','95',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNZ','r/m8',NULL,NULL,NULL,NULL,'....z...',NULL,NULL,NULL,NULL,'Set Byte on Condition - not zero/not equal (ZF=0)'),(893,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETNE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(894,'','0F','96',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETBE','r/m8',NULL,NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Set Byte on Condition - below or equal/not above (CF=1 OR ZF=1)'),(895,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETNA','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(896,'','0F','97',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNBE','r/m8',NULL,NULL,NULL,NULL,'....z..c',NULL,NULL,NULL,NULL,'Set Byte on Condition - not below or equal/above (CF=0 AND ZF=0)'),(897,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETA','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(898,'','0F','98',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETS','r/m8',NULL,NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Set Byte on Condition - sign (SF=1)'),(899,'','0F','99',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNS','r/m8',NULL,NULL,NULL,NULL,'...s....',NULL,NULL,NULL,NULL,'Set Byte on Condition - not sign (SF=0)'),(900,'','0F','9A',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETP','r/m8',NULL,NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Set Byte on Condition - parity/parity even (PF=1)'),(901,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETPE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(902,'','0F','9B',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNP','r/m8',NULL,NULL,NULL,NULL,'......p.',NULL,NULL,NULL,NULL,'Set Byte on Condition - not parity/parity odd (PF=0)'),(903,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETPO','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(904,'','0F','9C',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETL','r/m8',NULL,NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Set Byte on Condition - less/not greater (SF!=OF)'),(905,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETNGE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(906,'','0F','9D',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNL','r/m8',NULL,NULL,NULL,NULL,'o..s....',NULL,NULL,NULL,NULL,'Set Byte on Condition - not less/greater or equal (SF=OF)'),(907,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETGE','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(908,'','0F','9E',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETLE','r/m8',NULL,NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Set Byte on Condition - less or equal/not greater ((ZF=1) OR (SF!=OF))'),(909,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETNG','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(910,'','0F','9F',NULL,'0',NULL,'D24',NULL,NULL,NULL,'SETNLE','r/m8',NULL,NULL,NULL,NULL,'o..sz...',NULL,NULL,NULL,NULL,'Set Byte on Condition - not less nor equal/greater ((ZF=0) AND (SF=OF))'),(911,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'SETG','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(912,'','0F','A0',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PUSH','FS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(913,'','0F','A1',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'POP','FS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pop a Value from the Stack'),(914,'','0F','A2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CPUID','IA32_BIOS_SIG…','EAX','ECX','...',NULL,NULL,NULL,NULL,NULL,NULL,'CPU Identification'),(915,'','0F','A3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'BT','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test'),(916,'','0F','A4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SHLD','r/m16/32/64','r16/32/64','imm8',NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Double Precision Shift Left'),(917,'','0F','A5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SHLD','r/m16/32/64','r16/32/64','CL',NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Double Precision Shift Left'),(918,'','0F','A8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PUSH','GS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Push Word, Doubleword or Quadword Onto the Stack'),(919,'','0F','A9',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'POP','GS',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pop a Value from the Stack'),(920,'','0F','AA',NULL,NULL,NULL,NULL,'S',NULL,NULL,'RSM','Flags',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Resume from System Management Mode'),(921,'','0F','AB',NULL,'r',NULL,NULL,NULL,NULL,'L','BTS','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test and Set'),(922,'','0F','AC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SHRD','r/m16/32/64','r16/32/64','imm8',NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Double Precision Shift Right'),(923,'','0F','AD',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SHRD','r/m16/32/64','r16/32/64','CL',NULL,NULL,NULL,'o..szapc','o..sz.pc','o....a.c',NULL,'Double Precision Shift Right'),(924,'','0F','AE',NULL,'0',NULL,NULL,NULL,NULL,NULL,'FXSAVE','m512','ST','ST1','...',NULL,NULL,NULL,NULL,NULL,NULL,'Save x87 FPU, MMX, XMM, and MXCSR State'),(925,'','0F','AE',NULL,'0',NULL,NULL,'E',NULL,NULL,'FXSAVE','m512','ST','ST1','...',NULL,NULL,NULL,NULL,NULL,NULL,'Save x87 FPU, MMX, XMM, and MXCSR State'),(926,'','0F','AE',NULL,'1',NULL,NULL,NULL,NULL,NULL,'FXRSTOR','ST','ST1','ST2','...',NULL,NULL,NULL,NULL,NULL,NULL,'Restore x87 FPU, MMX, XMM, and MXCSR State'),(927,'','0F','AE',NULL,'1',NULL,NULL,'E',NULL,NULL,'FXRSTOR','ST','ST1','ST2','...',NULL,NULL,NULL,NULL,NULL,NULL,'Restore x87 FPU, MMX, XMM, and MXCSR State'),(928,'','0F','AE',NULL,'2',NULL,NULL,NULL,NULL,NULL,'LDMXCSR','m32',NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Load MXCSR Register'),(929,'','0F','AE',NULL,'3',NULL,NULL,NULL,NULL,NULL,'STMXCSR','m32',NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Store MXCSR Register State'),(930,'','0F','AE',NULL,'4','C2++',NULL,NULL,NULL,NULL,'XSAVE','m','EDX','EAX','...',NULL,NULL,NULL,NULL,NULL,NULL,'Save Processor Extended States'),(931,'','0F','AE',NULL,'4','C2++',NULL,'E',NULL,NULL,'XSAVE','m','EDX','EAX','...',NULL,NULL,NULL,NULL,NULL,NULL,'Save Processor Extended States'),(932,'','0F','AE',NULL,'5',NULL,NULL,NULL,NULL,NULL,'LFENCE',NULL,NULL,NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Load Fence'),(933,'','0F','AE',NULL,'5','C2++',NULL,'E',NULL,NULL,'XRSTOR','ST','ST1','ST2','...',NULL,NULL,NULL,NULL,NULL,NULL,'Restore Processor Extended States'),(934,'','0F','AE',NULL,'6',NULL,NULL,NULL,NULL,NULL,'MFENCE',NULL,NULL,NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Memory Fence'),(935,'','0F','AE',NULL,'7',NULL,NULL,NULL,NULL,NULL,'SFENCE',NULL,NULL,NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Store Fence'),(936,'','0F','AE',NULL,'7',NULL,NULL,NULL,NULL,NULL,'CLFLUSH','m8',NULL,NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Flush Cache Line'),(937,'','0F','AF',NULL,'r',NULL,NULL,NULL,NULL,NULL,'IMUL','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o......c','...szap.',NULL,'Signed Multiply'),(938,'','0F','B0',NULL,'r',NULL,'D25',NULL,NULL,'L','CMPXCHG','r/m8','AL','r8',NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare and Exchange'),(939,'','0F','B1',NULL,'r',NULL,'D25',NULL,NULL,'L','CMPXCHG','r/m16/32/64','rAX','r16/32/64',NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Compare and Exchange'),(940,'','0F','B2',NULL,'r',NULL,'D26',NULL,NULL,NULL,'LSS','SS','r16/32/64','m16:16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Far Pointer'),(941,'','0F','B3',NULL,'r',NULL,NULL,NULL,NULL,'L','BTR','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test and Reset'),(942,'','0F','B4',NULL,'r',NULL,'D26',NULL,NULL,NULL,'LFS','FS','r16/32/64','m16:16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Far Pointer'),(943,'','0F','B5',NULL,'r',NULL,'D26',NULL,NULL,NULL,'LGS','GS','r16/32/64','m16:16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Load Far Pointer'),(944,'','0F','B6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVZX','r16/32/64','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move with Zero-Extend'),(945,'','0F','B7',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVZX','r16/32/64','r/m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move with Zero-Extend'),(946,'F3','0F','B8',NULL,'r','C2++',NULL,NULL,NULL,NULL,'POPCNT','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc',NULL,NULL,'o..s.apc','Bit Population Count'),(947,'','0F','B9',NULL,'r',NULL,'M27',NULL,NULL,NULL,'UD','r','r/m',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Undefined Instruction'),(948,'','0F','BA',NULL,'4',NULL,NULL,NULL,NULL,NULL,'BT','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test'),(949,'','0F','BA',NULL,'5',NULL,NULL,NULL,NULL,'L','BTS','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test and Set'),(950,'','0F','BA',NULL,'6',NULL,NULL,NULL,NULL,'L','BTR','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test and Reset'),(951,'','0F','BA',NULL,'7',NULL,NULL,NULL,NULL,'L','BTC','r/m16/32/64','imm8',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test and Complement'),(952,'','0F','BB',NULL,'r',NULL,NULL,NULL,NULL,'L','BTC','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','.......c','o..szap.',NULL,'Bit Test and Complement'),(953,'','0F','BC',NULL,'r',NULL,'D28',NULL,NULL,NULL,'BSF','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','....z...','o..s.apc',NULL,'Bit Scan Forward'),(954,'','0F','BD',NULL,'r',NULL,'D28',NULL,NULL,NULL,'BSR','r16/32/64','r/m16/32/64',NULL,NULL,NULL,NULL,'o..szapc','....z...','o..s.apc',NULL,'Bit Scan Reverse'),(955,'','0F','BE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSX','r16/32/64','r/m8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move with Sign-Extension'),(956,'','0F','BF',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVSX','r16/32/64','r/m16',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Move with Sign-Extension'),(957,'','0F','C0',NULL,'r',NULL,NULL,NULL,NULL,'L','XADD','r/m8','r8',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Exchange and Add'),(958,'','0F','C1',NULL,'r',NULL,NULL,NULL,NULL,'L','XADD','r/m16/32/64','r16/32/64',NULL,NULL,NULL,NULL,'o..szapc','o..szapc',NULL,NULL,'Exchange and Add'),(959,'','0F','C2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMPPS','xmm','xmm/m128','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compare Packed Single-FP Values'),(960,'F3','0F','C2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMPSS','xmm','xmm/m32','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compare Scalar Single-FP Values'),(961,'66','0F','C2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMPPD','xmm','xmm/m128','imm8',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Packed Double-FP Values'),(962,'F2','0F','C2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CMPSD','xmm','xmm/m64','imm8',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Compare Scalar Double-FP Values'),(963,'','0F','C3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVNTI','m32/64','r32/64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Store Doubleword Using Non-Temporal Hint'),(964,'','0F','C4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PINSRW','mm','r32/64','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Insert Word'),(965,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PINSRW','mm','m16','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(966,'66','0F','C4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PINSRW','xmm','r32/64','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Insert Word'),(967,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'PINSRW','xmm','m16','imm8',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(968,'','0F','C5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PEXTRW','r32/64','mm','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Extract Word'),(969,'66','0F','C5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PEXTRW','r32/64','xmm','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Extract Word'),(970,'','0F','C6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SHUFPS','xmm','xmm/m128','imm8',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Shuffle Packed Single-FP Values'),(971,'66','0F','C6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'SHUFPD','xmm','xmm/m128','imm8',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shuffle Packed Double-FP Values'),(972,'','0F','C7',NULL,'1',NULL,'D29',NULL,NULL,'L','CMPXCHG8B','m64','EAX','EDX','...',NULL,NULL,'....z...','....z...',NULL,NULL,'Compare and Exchange Bytes'),(973,'','0F','C7',NULL,'1',NULL,'D29','E',NULL,'L','CMPXCHG8B','m64','EAX','EDX','...',NULL,NULL,'....z...','....z...',NULL,NULL,'Compare and Exchange Bytes'),(974,'',NULL,'',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CMPXCHG16B','m128','RAX','RDX','...',NULL,NULL,NULL,NULL,NULL,NULL,NULL),(975,'','0F','C7',NULL,'6',NULL,'D33','P','0',NULL,'VMPTRLD','m64',NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Load Pointer to Virtual-Machine Control Structure'),(976,'66','0F','C7',NULL,'6',NULL,'D33','P','0',NULL,'VMCLEAR','m64',NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Clear Virtual-Machine Control Structure'),(977,'F3','0F','C7',NULL,'6',NULL,'D33','P','0',NULL,'VMXON','m64',NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Enter VMX Operation'),(978,'','0F','C7',NULL,'7',NULL,'D33','P','0',NULL,'VMPTRST','m64',NULL,NULL,NULL,'vmx',NULL,'o..szapc','o..szapc',NULL,NULL,'Store Pointer to Virtual-Machine Control Structure'),(979,'','0F','C8+r',NULL,NULL,NULL,'D30',NULL,NULL,NULL,'BSWAP','r16/32/64',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Byte Swap'),(980,'66','0F','D0',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADDSUBPD','xmm','xmm/m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Packed Double-FP Add/Subtract'),(981,'F2','0F','D0',NULL,'r',NULL,NULL,NULL,NULL,NULL,'ADDSUBPS','xmm','xmm/m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Packed Single-FP Add/Subtract'),(982,'','0F','D1',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRLW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(983,'66','0F','D1',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRLW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(984,'','0F','D2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRLD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(985,'66','0F','D2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRLD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(986,'','0F','D3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRLQ','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(987,'66','0F','D3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRLQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Logical'),(988,'','0F','D4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDQ','mm','mm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Quadword Integers'),(989,'66','0F','D4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Quadword Integers'),(990,'','0F','D5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULLW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Signed Integers and Store Low Result'),(991,'66','0F','D5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULLW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Signed Integers and Store Low Result'),(992,'66','0F','D6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVQ','xmm/m64','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Quadword'),(993,'F3','0F','D6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVQ2DQ','xmm','mm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Quadword from MMX Technology to XMM Register'),(994,'F2','0F','D6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVDQ2Q','mm','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Move Quadword from XMM to MMX Technology Register'),(995,'','0F','D7',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMOVMSKB','r32/64','mm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Byte Mask'),(996,'66','0F','D7',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMOVMSKB','r32/64','xmm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Move Byte Mask'),(997,'','0F','D8',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBUSB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Unsigned Integers with Unsigned Saturation'),(998,'66','0F','D8',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBUSB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Unsigned Integers with Unsigned Saturation'),(999,'','0F','D9',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBUSW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Unsigned Integers with Unsigned Saturation'),(1000,'66','0F','D9',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBUSW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Unsigned Integers with Unsigned Saturation'),(1001,'','0F','DA',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMINUB','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Minimum of Packed Unsigned Byte Integers'),(1002,'66','0F','DA',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMINUB','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Minimum of Packed Unsigned Byte Integers'),(1003,'','0F','DB',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PAND','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Logical AND'),(1004,'66','0F','DB',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PAND','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Logical AND'),(1005,'','0F','DC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDUSB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Unsigned Integers with Unsigned Saturation'),(1006,'66','0F','DC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDUSB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Unsigned Integers with Unsigned Saturation'),(1007,'','0F','DD',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDUSW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Unsigned Integers with Unsigned Saturation'),(1008,'66','0F','DD',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDUSW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Unsigned Integers with Unsigned Saturation'),(1009,'','0F','DE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMAXUB','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Maximum of Packed Unsigned Byte Integers'),(1010,'66','0F','DE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMAXUB','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Maximum of Packed Unsigned Byte Integers'),(1011,'','0F','DF',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PANDN','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Logical AND NOT'),(1012,'66','0F','DF',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PANDN','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Logical AND NOT'),(1013,'','0F','E0',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PAVGB','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Average Packed Integers'),(1014,'66','0F','E0',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PAVGB','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Average Packed Integers'),(1015,'','0F','E1',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRAW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(1016,'66','0F','E1',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRAW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(1017,'','0F','E2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRAD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(1018,'66','0F','E2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSRAD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Right Arithmetic'),(1019,'','0F','E3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PAVGW','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Average Packed Integers'),(1020,'66','0F','E3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PAVGW','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Average Packed Integers'),(1021,'','0F','E4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULHUW','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Unsigned Integers and Store High Result'),(1022,'66','0F','E4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULHUW','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Unsigned Integers and Store High Result'),(1023,'','0F','E5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULHW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Signed Integers and Store High Result'),(1024,'66','0F','E5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULHW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Signed Integers and Store High Result'),(1025,'F2','0F','E6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTPD2DQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed Double-FP Values to DW Integers'),(1026,'66','0F','E6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTTPD2DQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert with Trunc. Packed Double-FP Values to DW Integers'),(1027,'F3','0F','E6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'CVTDQ2PD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Convert Packed DW Integers to Double-FP Values'),(1028,'','0F','E7',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVNTQ','m64','mm',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Store of Quadword Using Non-Temporal Hint'),(1029,'66','0F','E7',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MOVNTDQ','m128','xmm',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Store Double Quadword Using Non-Temporal Hint'),(1030,'','0F','E8',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBSB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Signed Integers with Signed Saturation'),(1031,'66','0F','E8',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBSB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Signed Integers with Signed Saturation'),(1032,'','0F','E9',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBSW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Signed Integers with Signed Saturation'),(1033,'66','0F','E9',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBSW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Signed Integers with Signed Saturation'),(1034,'','0F','EA',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMINSW','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Minimum of Packed Signed Word Integers'),(1035,'66','0F','EA',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMINSW','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Minimum of Packed Signed Word Integers'),(1036,'','0F','EB',NULL,'r',NULL,NULL,NULL,NULL,NULL,'POR','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical OR'),(1037,'66','0F','EB',NULL,'r',NULL,NULL,NULL,NULL,NULL,'POR','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Bitwise Logical OR'),(1038,'','0F','EC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDSB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Signed Integers with Signed Saturation'),(1039,'66','0F','EC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDSB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Signed Integers with Signed Saturation'),(1040,'','0F','ED',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDSW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Signed Integers with Signed Saturation'),(1041,'66','0F','ED',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDSW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Signed Integers with Signed Saturation'),(1042,'','0F','EE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMAXSW','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Maximum of Packed Signed Word Integers'),(1043,'66','0F','EE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMAXSW','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Maximum of Packed Signed Word Integers'),(1044,'','0F','EF',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PXOR','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Logical Exclusive OR'),(1045,'66','0F','EF',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PXOR','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Logical Exclusive OR'),(1046,'F2','0F','F0',NULL,'r',NULL,NULL,NULL,NULL,NULL,'LDDQU','xmm','m128',NULL,NULL,'sse3',NULL,NULL,NULL,NULL,NULL,'Load Unaligned Integer 128 Bits'),(1047,'','0F','F1',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSLLW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(1048,'66','0F','F1',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSLLW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(1049,'','0F','F2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSLLD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(1050,'66','0F','F2',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSLLD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(1051,'','0F','F3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSLLQ','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(1052,'66','0F','F3',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSLLQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Shift Packed Data Left Logical'),(1053,'','0F','F4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULUDQ','mm','mm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Unsigned DW Integers'),(1054,'66','0F','F4',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMULUDQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply Packed Unsigned DW Integers'),(1055,'','0F','F5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMADDWD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Multiply and Add Packed Integers'),(1056,'66','0F','F5',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PMADDWD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Multiply and Add Packed Integers'),(1057,'','0F','F6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSADBW','mm','mm/m64',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Sum of Absolute Differences'),(1058,'66','0F','F6',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSADBW','xmm','xmm/m128',NULL,NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Compute Sum of Absolute Differences'),(1059,'','0F','F7',NULL,'r',NULL,'D31',NULL,NULL,NULL,'MASKMOVQ','m64','mm','mm',NULL,'sse1',NULL,NULL,NULL,NULL,NULL,'Store Selected Bytes of Quadword'),(1060,'66','0F','F7',NULL,'r',NULL,NULL,NULL,NULL,NULL,'MASKMOVDQU','m128','xmm','xmm',NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Store Selected Bytes of Double Quadword'),(1061,'','0F','F8',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Integers'),(1062,'66','0F','F8',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Integers'),(1063,'','0F','F9',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Integers'),(1064,'66','0F','F9',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Integers'),(1065,'','0F','FA',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Integers'),(1066,'66','0F','FA',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Integers'),(1067,'','0F','FB',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBQ','mm','mm/m64',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Quadword Integers'),(1068,'66','0F','FB',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PSUBQ','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Subtract Packed Quadword Integers'),(1069,'','0F','FC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDB','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Integers'),(1070,'66','0F','FC',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDB','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Integers'),(1071,'','0F','FD',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDW','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Integers'),(1072,'66','0F','FD',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDW','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Integers'),(1073,'','0F','FE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDD','mm','mm/m64',NULL,NULL,'mmx',NULL,NULL,NULL,NULL,NULL,'Add Packed Integers'),(1074,'66','0F','FE',NULL,'r',NULL,NULL,NULL,NULL,NULL,'PADDD','xmm','xmm/m128',NULL,NULL,'sse2',NULL,NULL,NULL,NULL,NULL,'Add Packed Integers');
/*!40000 ALTER TABLE `x86ref` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-05-09 11:17:19
